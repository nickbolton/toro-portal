<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2007 Unicon, Inc.

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this distribution.  It is also available here:
  http://www.fsf.org/licensing/licenses/gpl.html

  As a special exception to the terms and conditions of version 
  2 of the GPL, you may redistribute this Program in connection 
  with Free/Libre and Open Source Software ("FLOSS") applications 
  as described in the GPL FLOSS exception.  You should have received
  a copy of the text describing the FLOSS exception along with this
  distribution.
-->
<!--
    Configuration file for the MessagingPortlet.

    The messaging element has a single attribute 'allow-xhtml'. This boolean
    switch toggles support for XHTML message bodies. If it is turned off, all
    messages will appear as plain text even if they were previously XHTML.
    Turning this flag on will enable a rich text editor within the Message
    Compose screen to allow for easily creating XHTML messages.
-->
<messaging allow-xhtml="true">
    <!--
        Attachment upload limit. This value is a floating point number followed
        by a suffix of 'b', 'k', or 'm', which correspond respectively to
        bytes, kilobytes, or megabytes. These suffixes are not case sensitive.

        A value of 0 disables attachment uploading (but not downloading).
    -->
    <upload-limit>2.8M</upload-limit>

    <!--
        Filesystem location where attachments should be stored.
    -->
    <attachment-path>@toro.data.home@/messaging_portlet</attachment-path> 

    <!--
        The number of subfolders below the attachment-path. This is used to
        "hash" the message identifier into a system of subfolders that reduces
        the number of subfolders located at any one level in the filesystem.
        Most filesystems will slow down if they have an excessive number of
        files or folders within the same directory.

        The default is "3", which should be a good trade-off for depth and
        speed for most filesystems.
    -->
    <hashing-layers>3</hashing-layers>

    <!--
        Message expiration in days. This numeric value dictates the number of
        days a message will remain active and visible to all users if not
        deleted. If a user has "Saved" a message, it will still remain in their
        saved folder, untouched.
    
        This value is attached to the message at the time of sending the
        message, and cannot be modified retroactively.

        A value of 0 disables message expiration; in other words, messages will
        remain active until deleted.
    -->
    <message-expiration>0</message-expiration>
    
    <!--
        Select a Peephole view. Two views exist: wide, or narrow. Wide is more
        appropriate when the channel exists in a single-column tab, whereas the
        narrow view works well in a condensed multi-column tab.

        For the wide peephole, an additional setting is available:
        message-limit. This setting dictates the maximum number of messages to
        display in the peephole view prior to entering the full application.
    -->
    <peephole>
        <!-- <type>narrow</type> -->
    	<type>wide</type>
    	<message-limit>4</message-limit>
    </peephole>

    <!--
        System instance of an E-Mail backed messaging system. This instance is
        used to send system originated emails such as those sent when utilizing
        the "Send copy via Email" feature.
    -->
    <message-factory id="system" impl="net.unicon.mercury.fac.email.EmailMessageFactory">
        <account type="transport" impl="net.unicon.mercury.fac.email.SMTPTransportAccount">
            <!-- The address mail sent using this instance should appear to originate from. -->
            <from>academus@unicon.net</from>
            <!-- The SMTP server hostname or IP -->
            <host>@smtp.server.hostname@</host>
            <!--- The port SMTP is running on. This should be 25 in most cases. -->
            <port>@smtp.server.port@</port>

            <username>@smtp.server.username@</username>
            <password>@smtp.server.password@</password>
        </account>
    </message-factory>

    <!--
        This is a list of hosts allowed to utilize the SendMercuryMessage web
        service. Each hostname or ip should be listed in a 'host' element.
    -->
    <allowed-hosts service="SendMercuryMessage">
        <!-- localhost (127.0.0.1) should always be present. -->
        <host>127.0.0.1</host>
        <!-- The server's hostname should always be present. -->
        <host>portal.server.hostname</host>
    </allowed-hosts>

    <!-- Nothing below this line should require modification in normal configurations. -->

    <!--
        Message center declaration. This should not be modified other than to
        change the default permissions granted to users/groups or textual
        descriptions.
    -->
    <message-center id="notifications">
        <label>Notifications</label>
        <description>Notifications are important messages that may require further action or input from you.</description>

        <access-broker handle="notifications" impl="net.unicon.alchemist.access.permissions.PermissionsAccessBroker">
            <!--
                The class defining the full set of AccessTypes used in the
                permissions tree.
                -->
            <access impl="net.unicon.academus.apps.messaging.MessagingAccessType"/>

            <targets>
                <access-broker handle="notifications-t" impl="net.unicon.alchemist.access.jit.JitAccessBroker">
                    <jit-rule>
                        <behavior>
                            <trigger type="GROUP">Everyone</trigger>
                            <target type="USER" />
                            <access impl="net.unicon.alchemist.access.permissions.DummyAccessType">
                                <type handle="DUMMY" value="GRANT"/>
                            </access>
							<creator 
								impl="net.unicon.academus.apps.messaging.RdbmsMessageFactoryCreator"
								needsDataSource="true" 
								handle="notifications"
								group-trigger="true">

								<copy-of select="/messaging/attachment-path"/>
								<copy-of select="/messaging/hashing-layers"/>
								<copy-of select="/messaging/message-expiration"/>
								<copy-of select="//civis[@id='addressBook']"/>
							</creator>		
						
						</behavior>
                    </jit-rule>

                    <access-broker
                        handle="notifications-t-i"
                        impl="net.unicon.alchemist.access.rdbms.RdbmsAccessBroker"
                        needsDataSource="true">
                        <access impl="net.unicon.alchemist.access.permissions.DummyAccessType"/>
                    </access-broker>
                </access-broker>
            </targets>

            <permissions>
                <access-broker handle="notifications-p" impl="net.unicon.alchemist.access.jit.JitAccessBroker">
                    <jit-rule>
                        <!--
                           Each <behavior> element can be configured to provide
                           default permissions to users or groups. All
                           permissions need not be specified here, as they can
                           be further configured using the user interface of
                           he Permissions Portlet.
                        -->
                        <behavior>
                            <trigger type="GROUP">Everyone</trigger>
                            <target type="GROUP">Everyone</target>
                            <access impl="net.unicon.academus.apps.messaging.MessagingAccessType">
                                <type handle="ATTACH" value="GRANT"/>
                                <type handle="DELETE" value="GRANT"/>
                                <type handle="COMPOSE" value="GRANT"/>
                                <type handle="SAVE" value="GRANT"/>
                            </access>
                            <creator impl="net.unicon.alchemist.access.permissions.DummyCreator"/>
                        </behavior>
                    </jit-rule>

                    <access-broker
                        handle="notifications-p-i"
                        impl="net.unicon.alchemist.access.rdbms.RdbmsAccessBroker"
                        needsDataSource="true">
                        <access impl="net.unicon.academus.apps.messaging.MessagingAccessType"/>
                    </access-broker>
                </access-broker>
            </permissions>
        </access-broker>
    </message-center>

    <!--
        Civis implementation to be used to resolve usernames into email
        addresses for the 'Send copy via Email' option. This should not require
        modification, as it utilized the Academus framework for gathering this
        information.
    -->
    <civis id="addressBook" impl="net.unicon.civis.fac.academus.AcademusCivisFactory">
    	<restrictor impl="net.unicon.civis.grouprestrictor.AcademusGroupRestrictor" />
        <person-attributes>
            <attribute handle="email">E-mail Address</attribute>
        </person-attributes>
    </civis>


    <!--
        Name to Location mappings for the notification Callback system.  The
        URL referenced must support the REST protocol.  Please see the
        Notifications API Document for further details of adding additional
        modules to the callback system.
    -->
    <callbacks>
        <entry>
            <name>calendar</name>
            <location>@portal.base.url@/CalendarReply</location>
        </entry>
    </callbacks>

    <!--
        JNDI Reference to the portal database. This should not require
        modification unless the portal container is modified.
    -->
    <jndi-ref>java:comp/env/jdbc/@datasource@</jndi-ref>

    <query-file>/config/queries/RdbmsMessageFactory.@db.platform@.xml</query-file>

</messaging>
