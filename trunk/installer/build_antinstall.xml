<!--
  Copyright (C) 2007 Unicon, Inc.

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this distribution.  It is also available here:
  http://www.fsf.org/licensing/licenses/gpl.html

  As a special exception to the terms and conditions of version 
  2 of the GPL, you may redistribute this Program in connection 
  with Free/Libre and Open Source Software ("FLOSS") applications 
  as described in the GPL FLOSS exception.  You should have received
  a copy of the text describing the FLOSS exception along with this
  distribution.
-->
<project name="toro-deployment" default="driver" basedir="${basedir}"
    xmlns:artifact="urn:maven-artifact-ant">

    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant">
        <classpath>
            <pathelement path="${basedir}"/>
        </classpath>
    </typedef>

    <artifact:pom id="maven.project" file="${basedir}/pom.xml" />

    <artifact:remoteRepository
        id="uportal.repository"
        url="${uportal.remote.repo}" />

    <artifact:remoteRepository
        id="toro.repository"
        url="${toro.remote.repo}" />

    <artifact:remoteRepository
        id="central.repository"
        url="${central.remote.repo}" />

    <import file="./build_common.xml"/>

    <!-- if it's being executed from the remote configured machine, then execute away.. -->
    <taskdef name="sethostname" classname="net.unicon.toro.installer.anttask.SetHostname" classpath="${basedir}"/>
    <sethostname property="my.hostname"/>
    <if>
        <and>
            <not><equals arg1="${portal.server.hostname}" arg2="${my.hostname}"/></not>
            <equals arg1="${remote-config}" arg2="true"/>
            <contains string="${remote-config-page-targets}" substring="remote-config"/>
        </and>
        <then>
            <property name="run.remote.config" value="true"/>
        </then>
        <else>
            <property name="run.remote.config" value="false"/>
        </else>
    </if>

    <!-- don't fetch artifacts when in remote-config mode -->
    <if>
        <and>
            <equals arg1="${run.remote.config}" arg2="false"/>
            <isset property="postgres.platform"/>
        </and>
        <then>
            <artifact:dependencies pathId="db.classpath">
                <dependency groupId="postgresql" artifactId="postgresql"
                    version="${postgresql.version}" type="jar"/>
                <remoteRepository refid="central.repository" />
            </artifact:dependencies>
            <artifact:dependencies filesetId="db.fileset">
                <dependency groupId="postgresql" artifactId="postgresql"
                    version="${postgresql.version}" type="jar"/>
                <remoteRepository refid="central.repository" />
            </artifact:dependencies>
            <property name="jdbc.url" value="jdbc:postgresql://${jdbc.hostname}:${jdbc.port}/${jdbc.database.name}"/>
        </then>
    </if>

    <if>
        <and>
            <equals arg1="${run.remote.config}" arg2="false"/>
            <contains string="${jdbc.driver}" substring="jtds"/>
        </and>
        <then>
            <artifact:dependencies pathId="db.classpath">
                <dependency groupId="net.sourceforge.jtds" artifactId="jtds"
                    version="${jtds.version}" type="jar"/>
                <remoteRepository refid="central.repository" />
            </artifact:dependencies>
            <artifact:dependencies filesetId="db.fileset">
                <dependency groupId="net.sourceforge.jtds" artifactId="jtds"
                    version="${jtds.version}" type="jar"/>
                <remoteRepository refid="central.repository" />
            </artifact:dependencies>
            <property name="jdbc.url" value="jdbc:jtds:sqlserver://${jdbc.hostname}:${jdbc.port};DatabaseName=${jdbc.database.name}"/>
        </then>
    </if>

    <if>
        <and>
            <equals arg1="${run.remote.config}" arg2="false"/>
            <isset property="mysql.platform"/>
        </and>
        <then>
            <path id="db.classpath">
                <pathelement location="${basedir}/lib/mysql-connector-java-5.1.5-bin.jar"/>
            </path>
            <fileset id="db.fileset" dir="${basedir}/lib">
                <pathelement location="mysql-connector-java-5.1.5-bin.jar"/>
            </fileset>
            <property name="jdbc.url" value="jdbc:mysql://${jdbc.hostname}:${jdbc.port}/${jdbc.database.name}?relaxAutoCommit=true"/>
        </then>
    </if>

    <if>
        <and>
            <equals arg1="${run.remote.config}" arg2="false"/>
            <isset property="oracle.platform"/>
        </and>
        <then>
            <path id="db.classpath">
                <pathelement location="${basedir}/lib/ojdbc14-10g.jar"/>
            </path>
            <fileset id="db.fileset" dir="${basedir}/lib">
                <include name="ojdbc14-10g.jar"/>
            </fileset>
            <property name="jdbc.url" value="jdbc:oracle:thin:@${jdbc.hostname}:${jdbc.port}:${jdbc.database.name}"/>
        </then>
    </if>

    <!--  Driver targets  -->
    <target name="clean" depends="clean-portlets">
        <delete dir="${work.dir}"/>
        <delete dir="${webapp.home}/toro-portlets-common"/>
        <delete>
            <fileset dir="${tomcat.home}/shared/lib">
                <include name="academus-api*.jar"/>
                <include name="sso-authentication-cache*.jar"/>
            </fileset>
        </delete>
        <available property="uportal.deployment.exists" file="${portal.webapp.home}/WEB-INF/lib"/>
        <antcall target="clean-uportal-academus-api"/>
    </target>

    <target name="clean-uportal-academus-api" if="uportal.deployment.exists">
        <delete>
            <fileset dir="${portal.webapp.home}/WEB-INF/lib">
                <include name="uportal-academus-api*.jar"/>
            </fileset>
        </delete>
    </target>

    <target name="initialize-run-targets">

        <if>
            <equals arg1="${remote.configuration}" arg2="true"/>
            <then>
                <fail>Remote Configuration .. aborting.</fail>
            </then>
        </if>

        <condition property="run.uportal.deploy">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${uportal.deploy}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.channel.common">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${cms.active}" arg2="true"/>
                <equals arg1="${survey.active}" arg2="true"/>
                <equals arg1="${news.active}" arg2="true"/>
                <equals arg1="${classifieds.active}" arg2="true"/>
                <equals arg1="${calendar.active}" arg2="true"/>
                <equals arg1="${notes.active}" arg2="true"/>
                <equals arg1="${bookmarks.active}" arg2="true"/>
                <equals arg1="${campusannouncement.active}" arg2="true"/>
                <equals arg1="${addressbook.active}" arg2="true"/>
                <equals arg1="${ldapchangepw.active}" arg2="true"/>
                <equals arg1="${useradmin.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.portlets.common">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${run.deploy.channel.common}" arg2="true"/>
                <equals arg1="${briefcase-portlet.active}" arg2="true"/>
                <equals arg1="${messaging-portlet.active}" arg2="true"/>
                <equals arg1="${permissions-portlet.active}" arg2="true"/>
                <equals arg1="${gateway-portlet.active}" arg2="true"/>
                <equals arg1="${web-content-portlet.active}" arg2="true"/>
                <equals arg1="${blojsom.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.toro.common">
            <or>
                <equals arg1="${run.deploy.channel.common}" arg2="true"/>
                <equals arg1="${run.deploy.portlets.common}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.briefcase.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${briefcase-portlet.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.messaging.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${messaging-portlet.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.permissions.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${permissions-portlet.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.gateway.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${gateway-portlet.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.web.content.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${web-content-portlet.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.blojsom.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${blojsom.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.survey.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${survey.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.cms.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${cms.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.news.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${news.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.classifieds.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${classifieds.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.calendar.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${calendar.active}" arg2="true"/>
                <equals arg1="${cms.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.notes.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${notes.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.bookmarks.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${bookmarks.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.campusannouncement.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${campusannouncement.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.ldapchangepw.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${ldapchangepw.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.useradmin.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${useradmin.active}" arg2="true"/>
                <equals arg1="${cms.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.deploy.login.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${login.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.ldap.merge">
            <or>
                <equals arg1="${ldap.checkbox}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.briefcase.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${briefcase-portlet.publish}" arg2="true"/>
                <equals arg1="${briefcase-portlet.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.gateway.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${gateway-portlet.publish}" arg2="true"/>
                <equals arg1="${gateway-portlet.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.messaging.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${messaging-portlet.publish}" arg2="true"/>
                <equals arg1="${messaging-portlet.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.permissions.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${permissions-portlet.publish}" arg2="true"/>
                <equals arg1="${permissions-portlet.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.web.content.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${web-content-portlet.publish}" arg2="true"/>
                <equals arg1="${web-content-portlet.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.survey.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${survey.publish}" arg2="true"/>
                <equals arg1="${survey.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.cms.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${cms.publish}" arg2="true"/>
                <equals arg1="${cms.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.news.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${news.publish}" arg2="true"/>
                <equals arg1="${news.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.classifieds.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${classifieds.publish}" arg2="true"/>
                <equals arg1="${classifieds.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.calendar.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${calendar.publish}" arg2="true"/>
                <equals arg1="${run.deploy.calendar.channel}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.notes.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${notes.publish}" arg2="true"/>
                <equals arg1="${notes.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.bookmarks.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${bookmarks.publish}" arg2="true"/>
                <equals arg1="${bookmarks.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.campusannouncement.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${campusannouncement.publish}" arg2="true"/>
                <equals arg1="${campusannouncement.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.ldapchangepw.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${ldapchangepw.publish}" arg2="true"/>
                <equals arg1="${ldapchangepw.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.useradmin.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${useradmin.publish}" arg2="true"/>
                <equals arg1="${run.deploy.useradmin.channel}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.login.channel">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${login.publish}" arg2="true"/>
                <equals arg1="${login.active}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.publish.common.channels">
            <or>
                <equals arg1="${run.publish.cms.channel}" arg2="true"/>
                <equals arg1="${run.publish.survey.channel}" arg2="true"/>
                <equals arg1="${run.publish.news.channel}" arg2="true"/>
                <equals arg1="${run.publish.classifieds.channel}" arg2="true"/>
                <equals arg1="${run.publish.calendar.channel}" arg2="true"/>
                <equals arg1="${run.publish.notes.channel}" arg2="true"/>
                <equals arg1="${run.publish.bookmarks.channel}" arg2="true"/>
                <equals arg1="${run.publish.campusannouncement.channel}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.uportal.db">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${uportal.db}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.uportal.pubchan">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${uportal.pubchan}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.uportal.i18n.db">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${uportal.i18n.db}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.uportal.pubfragments">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${uportal.pubfragments}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.uportal.deploy.testsuite.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${uportal.deploy.testsuite.portlet}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.uportal.deploy.proxyportlet.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${uportal.deploy.proxyportlet.portlet}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.uportal.deploy.bookmarks.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${uportal.deploy.bookmarks.portlet}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.uportal.deploy.rss.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${uportal.deploy.rss.portlet}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.uportal.deploy.google.portlet">
            <or>
                <equals arg1="${deploy.all}" arg2="true"/>
                <equals arg1="${uportal.deploy.google.portlet}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.hibernate.alchemist">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${hibernate.alchemist}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.hibernate.demetrius">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${hibernate.demetrius}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.hibernate.mercury">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${hibernate.mercury}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.hibernate.portlets-common">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${hibernate.portlets-common}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.dbloader.cdk">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${dbloader.cdk}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.dbloader.toro.common">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${dbloader.toro.common}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.dbloader.survey">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${dbloader.survey}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.dbloader.cms">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${dbloader.cms}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.dbloader.news">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${dbloader.news}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.dbloader.classifieds">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${dbloader.classifieds}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.dbloader.calendar">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${dbloader.calendar}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.dbloader.notes">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${dbloader.notes}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.dbloader.bookmarks">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${dbloader.bookmarks}" arg2="true"/>
            </or>
        </condition>
        <condition property="run.dbloader.campusannouncement">
            <or>
                <equals arg1="${initialize.all}" arg2="true"/>
                <equals arg1="${dbloader.campusannouncement}" arg2="true"/>
            </or>
        </condition>
        <condition property="hibernate.create.only" value="--create">
            <equals arg1="${hibernate.create.only.checkbox}" arg2="true"/>
        </condition>
        <condition property="uportal.db.droptables.arg" value="-nD">
            <equals arg1="${hibernate.create.only.checkbox}" arg2="true"/>
        </condition>
        <condition property="hibernate.create.only" value=" ">
            <not><equals arg1="${hibernate.create.only.checkbox}" arg2="true"/></not>
        </condition>
        <condition property="uportal.db.droptables.arg" value=" ">
            <not><equals arg1="${hibernate.create.only.checkbox}" arg2="true"/></not>
        </condition>
    </target>

    <target name="dump-properties">
        <echo>Executing with properties:</echo>
        <dumpproperties/>
    </target>

    <target name="check-java-version">
        <echo message="basedir: ${basedir}"/>
        <taskdef name="javaversion" classname="net.unicon.toro.installer.anttask.JavaVersionTask" classpath="${basedir}"/>
        <javaversion minVersion="${minJavaVersion}" property="javaversion.ok"/>
        <fail unless="javaversion.ok"
            message="ERROR: Java version too old: found ${java.version}, needs ${minJavaVersion}."/> 
    </target>

    <target name="remote-config">
        <!-- if it's being executed from the remote configured machine, then execute away.. -->
        <taskdef name="sethostname" classname="net.unicon.toro.installer.anttask.SetHostname" classpath="${basedir}"/>
        <sethostname property="my.hostname"/>
        <echo>Checking hostnames. (configured remote=${portal.server.hostname}, this host=${my.hostname})</echo>
        <if>
            <equals arg1="${portal.server.hostname}" arg2="${my.hostname}"/>
            <then>
                <echo>Proceeding with install...</echo>
                <antcall target="driver"/>
            </then>
            <else>
                <echo>The installer was run in remote-config mode.  If you wish to run the installer with the configuration in ant.install.properties, edit it and set remote-config = false.</echo>
                <mkdir dir="${work.dir}"/>
                <touch file="${work.dir}/.successful"/>
            </else>
        </if>
    </target>

    <target name="driver" depends="initialize-run-targets, set-resource-tokens, set-db-properties">
        <taskdef name="copyWithAllPropertiesFilter" classname="net.unicon.toro.installer.anttask.CopyWithAllPropertiesFilter" classpath="${basedir}"/>
        <taskdef name="moveWithAllPropertiesFilter" classname="net.unicon.toro.installer.anttask.MoveWithAllPropertiesFilter" classpath="${basedir}"/>
        <taskdef name="dumpproperties" classname="net.unicon.toro.installer.anttask.DumpProperties" classpath="${basedir}"/>

        <antcall target="check-java-version"/>
        <antcall target="dump-properties"/>
        <antcall target="create-uportal-properties"/>

        <echo>Executing toro-installer-${maven.project.version}...</echo>

        <if>
            <isset property="run.uportal.deploy"/>
            <then>
                <antcall target="deploy-uportal"/>
            </then>
        </if>

        <available property="portal.webapp.home.exists" file="${portal.webapp.home}"/>
        <fail message="uPortal deployment does not exist as specified by portal.webapp.home=${portal.webapp.home}" unless="portal.webapp.home.exists"/>


        <if>
            <and>
                <isset property="run.uportal.deploy.testsuite.portlet"/>
                <not><available file="${work.dir}/.uportal-deploy-testsuite-portlet"/></not>
            </and>
            <then>
                <antcall target="uportal-deploy-testsuite-portlet"/>
                <touch file="${work.dir}/.uportal-deploy-testsuite-portlet"/>
            </then>
        </if>

        <if>
            <and>
                <isset property="run.uportal.deploy.proxyportlet.portlet"/>
                <not><available file="${work.dir}/.uportal-deploy-proxyportlet-portlet"/></not>
            </and>
            <then>
                <antcall target="uportal-deploy-proxyportlet-portlet"/>
                <touch file="${work.dir}/.uportal-deploy-proxyportlet-portlet"/>
            </then>
        </if>

        <if>
            <and>
                <isset property="run.uportal.deploy.bookmarks.portlet"/>
                <not><available file="${work.dir}/.uportal-deploy-bookmarks-portlet"/></not>
            </and>
            <then>
                <antcall target="uportal-deploy-bookmarks-portlet"/>
                <touch file="${work.dir}/.uportal-deploy-bookmarks-portlet"/>
            </then>
        </if>

        <if>
            <and>
                <isset property="run.uportal.deploy.rss.portlet"/>
                <not><available file="${work.dir}/.uportal-deploy-rss-portlet"/></not>
            </and>
            <then>
                <antcall target="uportal-deploy-rss-portlet"/>
                <touch file="${work.dir}/.uportal-deploy-rss-portlet"/>
            </then>
        </if>

        <if>
            <and>
                <isset property="run.uportal.deploy.google.portlet"/>
                <not><available file="${work.dir}/.uportal-deploy-google-portlet"/></not>
            </and>
            <then>
                <antcall target="uportal-deploy-google-portlet"/>
                <touch file="${work.dir}/.uportal-deploy-google-portlet"/>
            </then>
        </if>

        <if>
            <and>
                <isset property="run.deploy.toro.common"/>
                <not><available file="${work.dir}/.deploy-toro-common"/></not>
            </and>
            <then>
                <antcall target="deploy-toro-common"/>
                <touch file="${work.dir}/.deploy-toro-common"/>
            </then>
        </if>

        <if>
            <and>
                <isset property="run.deploy.portlets.common"/>
                <not><available file="${work.dir}/.deploy-portlets-common"/></not>
            </and>
            <then>
                <antcall target="deploy-portlets-common"/>
                <antcall target="deploy-portlets-common-webapp"/>
                <touch file="${work.dir}/.deploy-portlets-common"/>
            </then>
        </if>

        <if>
            <and>
                <isset property="run.deploy.briefcase.portlet"/>
                <not><available file="${work.dir}/.deploy-briefcase-portlet"/></not>
            </and>
            <then>
                <antcall target="deploy-briefcase-portlet"/>
                <touch file="${work.dir}/.deploy-briefcase-portlet"/>
            </then>
        </if>

        <if>
            <and>
                <isset property="run.deploy.messaging.portlet"/>
                <not><available file="${work.dir}/.deploy-messaging-portlet"/></not>
            </and>
            <then>
                <antcall target="deploy-messaging-portlet"/>
                <touch file="${work.dir}/.deploy-messaging-portlet"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.gateway.portlet"/>
                <not><available file="${work.dir}/.deploy-gateway-portlet"/></not>
            </and>
            <then>
                <antcall target="deploy-gateway-portlet"/>
                <touch file="${work.dir}/.deploy-gateway-portlet"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.web.content.portlet"/>
                <not><available file="${work.dir}/.deploy-web-content-portlet"/></not>
            </and>
            <then>
                <antcall target="deploy-web-content-portlet"/>
                <touch file="${work.dir}/.deploy-web-content-portlet"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.permissions.portlet"/>
                <not><available file="${work.dir}/.deploy-permissions-portlet"/></not>
            </and>
            <then>
                <antcall target="deploy-permissions-portlet"/>
                <touch file="${work.dir}/.deploy-permissions-portlet"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.blojsom.portlet"/>
                <not><available file="${work.dir}/.deploy-blojsom"/></not>
            </and>
            <then>
                <antcall target="deploy-blojsom"/>
                <touch file="${work.dir}/.deploy-blojsom"/>
            </then>
        </if>

        <if>
            <and>
                <isset property="run.deploy.channel.common"/>
                <not><available file="${work.dir}/.deploy-channels-common"/></not>
            </and>
            <then>
                <antcall target="deploy-channels-common"/>
                <touch file="${work.dir}/.deploy-channels-common"/>
            </then>
        </if>

        <if>
            <not><available file="${work.dir}/.ensure-security-contexts-cached"/></not>
            <then>
                <antcall target="ensure-security-contexts-cached"/>
                <touch file="${work.dir}/.ensure-security-contexts-cached"/>
            </then>
        </if>

        <if>
            <and>
                <isset property="run.deploy.bookmarks.channel"/>
                <not><available file="${work.dir}/.deploy-bookmarks-channel"/></not>
            </and>
            <then>
                <antcall target="deploy-bookmarks-channel"/>
                <touch file="${work.dir}/.deploy-bookmarks-channel"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.calendar.channel"/>
                <not><available file="${work.dir}/.deploy-calendar-channel"/></not>
            </and>
            <then>
                <antcall target="deploy-calendar-channel"/>
                <touch file="${work.dir}/.deploy-calendar-channel"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.campusannouncement.channel"/>
                <not><available file="${work.dir}/.deploy-campusannouncement-channel"/></not>
            </and>
            <then>
                <antcall target="deploy-campusannouncement-channel"/>
                <touch file="${work.dir}/.deploy-campusannouncement-channel"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.classifieds.channel"/>
                <not><available file="${work.dir}/.deploy-classifieds-channel"/></not>
            </and>
            <then>
                <antcall target="deploy-classifieds-channel"/>
                <touch file="${work.dir}/.deploy-classifieds-channel"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.ldapchangepw.channel"/>
                <not><available file="${work.dir}/.deploy-ldapchangepw-channel"/></not>
            </and>
            <then>
                <antcall target="deploy-ldapchangepw-channel"/>
                <touch file="${work.dir}/.deploy-ldapchangepw-channel"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.login.channel"/>
                <not><available file="${work.dir}/.deploy-login-channel"/></not>
            </and>
            <then>
                <antcall target="deploy-login-channel"/>
                <touch file="${work.dir}/.deploy-login-channel"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.news.channel"/>
                <not><available file="${work.dir}/.deploy-news-channel"/></not>
            </and>
            <then>
                <antcall target="deploy-news-channel"/>
                <touch file="${work.dir}/.deploy-news-channel"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.notes.channel"/>
                <not><available file="${work.dir}/.deploy-notes-channel"/></not>
            </and>
            <then>
                <antcall target="deploy-notes-channel"/>
                <touch file="${work.dir}/.deploy-notes-channel"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.survey.channel"/>
                <not><available file="${work.dir}/.deploy-survey-channel"/></not>
            </and>
            <then>
                <antcall target="deploy-survey-channel"/>
                <touch file="${work.dir}/.deploy-survey-channel"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.useradmin.channel"/>
                <not><available file="${work.dir}/.deploy-useradmin-channel"/></not>
            </and>
            <then>
                <antcall target="deploy-useradmin-channel"/>
                <touch file="${work.dir}/.deploy-useradmin-channel"/>
            </then>
        </if>
        <if>
            <and>
                <isset property="run.deploy.cms.channel"/>
                <not><available file="${work.dir}/.deploy-cms-channel"/></not>
            </and>
            <then>
                <antcall target="deploy-cms-channel"/>
                <touch file="${work.dir}/.deploy-cms-channel"/>
            </then>
        </if>

        <if>
            <and>
                <isset property="run.ldap.merge"/>
                <not><available file="${work.dir}/.ldap-merge"/></not>
            </and>
            <then>
                <antcall target="ldap-merge"/>
                <touch file="${work.dir}/.ldap-merge"/>
            </then>
        </if>

        <antcall target="initialize"/>

        <touch file="${work.dir}/.successful"/>
    </target>


   <target name="initialize">
      <copyWithAllPropertiesFilter file="${basedir}/properties/hibernate.properties" todir="${work.dir}" filtering="on"/>

      <if>
          <and>
              <isset property="run.uportal.db"/>
              <not><available file="${work.dir}/.uportal-load-db"/></not>
          </and>
          <then>
              <antcall target="uportal-load-db"/>
              <touch file="${work.dir}/.uportal-load-db"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.uportal.pubchan"/>
              <not><available file="${work.dir}/.uportal-pubchan"/></not>
          </and>
          <then>
              <antcall target="uportal-pubchan"/>
              <touch file="${work.dir}/.uportal-pubchan"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.uportal.i18n.db"/>
              <not><available file="${work.dir}/.uportal-i18n-db"/></not>
          </and>
          <then>
              <antcall target="uportal-i18n-db"/>
              <touch file="${work.dir}/.uportal-i18n-db"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.uportal.pubfragments"/>
              <not><available file="${work.dir}/.uportal-pubfragments"/></not>
          </and>
          <then>
              <antcall target="uportal-pubfragments">
                  <param name="fragmentFile" value="/properties/al/fragments.xml"/>
              </antcall>
              <touch file="${work.dir}/.uportal-pubfragments"/>
          </then>
      </if>

      <if>
          <not><available file="${work.dir}/.uportal-add-additional-constraints"/></not>
          <then>
              <antcall target="uportal-add-additional-constraints"/>
              <touch file="${work.dir}/.uportal-add-additional-constraints"/>
          </then>
      </if>

      <if>
          <and>
              <isset property="run.dbloader.toro.common"/>
              <not><available file="${work.dir}/.initialize-toro-common"/></not>
          </and>
          <then>
              <antcall target="initialize-toro-common"/>
              <touch file="${work.dir}/.initialize-toro-common"/>
          </then>
      </if>

      <if>
          <and>
              <isset property="run.hibernate.alchemist"/>
              <not><available file="${work.dir}/.initialize-alchemist"/></not>
          </and>
          <then>
              <antcall target="initialize-alchemist"/>
              <touch file="${work.dir}/.initialize-alchemist"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.dbloader.toro.common"/>
              <not><available file="${work.dir}/.initialize-access-controller"/></not>
          </and>
          <then>
              <antcall target="initialize-access-controller"/>
              <touch file="${work.dir}/.initialize-access-controller"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.hibernate.demetrius"/>
              <not><available file="${work.dir}/.initialize-demetrius"/></not>
          </and>
          <then>
              <antcall target="initialize-demetrius"/>
              <touch file="${work.dir}/.initialize-demetrius"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.hibernate.mercury"/>
              <not><available file="${work.dir}/.initialize-mercury"/></not>
          </and>
          <then>
              <antcall target="initialize-mercury"/>
              <touch file="${work.dir}/.initialize-mercury"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.hibernate.portlets-common"/>
              <not><available file="${work.dir}/.initialize-portlets-common"/></not>
          </and>
          <then>
              <antcall target="initialize-portlets-common"/>
              <touch file="${work.dir}/.initialize-portlets-common"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.dbloader.cdk"/>
              <not><available file="${work.dir}/.initialize-cdk"/></not>
          </and>
          <then>
              <antcall target="initialize-cdk"/>
              <touch file="${work.dir}/.initialize-cdk"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.dbloader.survey"/>
              <not><available file="${work.dir}/.initialize-survey"/></not>
          </and>
          <then>
              <antcall target="initialize-survey"/>
              <touch file="${work.dir}/.initialize-survey"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.dbloader.news"/>
              <not><available file="${work.dir}/.initialize-news"/></not>
          </and>
          <then>
              <antcall target="initialize-news"/>
              <touch file="${work.dir}/.initialize-news"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.dbloader.classifieds"/>
              <not><available file="${work.dir}/.initialize-classifieds"/></not>
          </and>
          <then>
              <antcall target="initialize-classifieds"/>
              <touch file="${work.dir}/.initialize-classifieds"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.dbloader.calendar"/>
              <not><available file="${work.dir}/.initialize-calendar"/></not>
          </and>
          <then>
              <antcall target="initialize-calendar"/>
              <touch file="${work.dir}/.initialize-calendar"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.dbloader.notes"/>
              <not><available file="${work.dir}/.initialize-notes"/></not>
          </and>
          <then>
              <antcall target="initialize-notes"/>
              <touch file="${work.dir}/.initialize-notes"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.dbloader.bookmarks"/>
              <not><available file="${work.dir}/.initialize-bookmarks"/></not>
          </and>
          <then>
              <antcall target="initialize-bookmarks"/>
              <touch file="${work.dir}/.initialize-bookmarks"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.dbloader.campusannouncement"/>
              <not><available file="${work.dir}/.initialize-campusannouncement"/></not>
          </and>
          <then>
              <antcall target="initialize-campusannouncement"/>
              <touch file="${work.dir}/.initialize-campusannouncement"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.dbloader.cms"/>
              <not><available file="${work.dir}/.initialize-cms"/></not>
          </and>
          <then>
              <antcall target="initialize-cms"/>
              <touch file="${work.dir}/.initialize-cms"/>
          </then>
      </if>

      <property name="uportal.pubchan" value="true"/>

      <if>
          <and>
              <isset property="run.publish.common.channels"/>
              <not><available file="${work.dir}/.publish-common-channels"/></not>
          </and>
          <then>
              <antcall target="publish-addressbook"/>
              <antcall target="publish-systray"/>
              <touch file="${work.dir}/.publish-common-channels"/>
          </then>
      </if>

      <if>
          <and>
              <isset property="run.publish.briefcase.portlet"/>
              <not><available file="${work.dir}/.publish-briefcase-portlet"/></not>
          </and>
          <then>
              <antcall target="publish-briefcase-portlet"/>
              <touch file="${work.dir}/.publish-briefcase-portlet"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.gateway.portlet"/>
              <not><available file="${work.dir}/.publish-gateway-portlet"/></not>
          </and>
          <then>
              <antcall target="publish-gateway-portlet"/>
              <touch file="${work.dir}/.publish-gateway-portlet"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.messaging.portlet"/>
              <not><available file="${work.dir}/.publish-messaging-portlet"/></not>
          </and>
          <then>
              <antcall target="publish-messaging-portlet"/>
              <touch file="${work.dir}/.publish-messaging-portlet"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.permissions.portlet"/>
              <not><available file="${work.dir}/.publish-permissions-portlet"/></not>
          </and>
          <then>
              <antcall target="publish-permissions-portlet"/>
              <touch file="${work.dir}/.publish-permissions-portlet"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.web.content.portlet"/>
              <not><available file="${work.dir}/.publish-web-content-portlet"/></not>
          </and>
          <then>
              <antcall target="publish-web-content-portlet"/>
              <touch file="${work.dir}/.publish-web-content-portlet"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.survey.channel"/>
              <not><available file="${work.dir}/.publish-survey"/></not>
          </and>
          <then>
              <antcall target="publish-survey"/>
              <touch file="${work.dir}/.publish-survey"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.news.channel"/>
              <not><available file="${work.dir}/.publish-news"/></not>
          </and>
          <then>
              <antcall target="publish-news"/>
              <touch file="${work.dir}/.publish-news"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.classifieds.channel"/>
              <not><available file="${work.dir}/.publish-classifieds"/></not>
          </and>
          <then>
              <antcall target="publish-classifieds"/>
              <touch file="${work.dir}/.publish-classifieds"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.calendar.channel"/>
              <not><available file="${work.dir}/.publish-calendar"/></not>
          </and>
          <then>
              <antcall target="publish-calendar"/>
              <touch file="${work.dir}/.publish-calendar"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.login.channel"/>
              <not><available file="${work.dir}/.publish-login"/></not>
          </and>
          <then>
              <antcall target="publish-login"/>
              <touch file="${work.dir}/.publish-login"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.notes.channel"/>
              <not><available file="${work.dir}/.publish-notes"/></not>
          </and>
          <then>
              <antcall target="publish-notes"/>
              <touch file="${work.dir}/.publish-notes"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.bookmarks.channel"/>
              <not><available file="${work.dir}/.publish-bookmarks"/></not>
          </and>
          <then>
              <antcall target="publish-bookmarks"/>
              <touch file="${work.dir}/.publish-bookmarks"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.campusannouncement.channel"/>
              <not><available file="${work.dir}/.publish-campusannouncement"/></not>
          </and>
          <then>
              <antcall target="publish-campusannouncement"/>
              <touch file="${work.dir}/.publish-campusannouncement"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.ldapchangepw.channel"/>
              <not><available file="${work.dir}/.publish-ldapchangepw"/></not>
          </and>
          <then>
              <antcall target="publish-ldapchangepw"/>
              <touch file="${work.dir}/.publish-ldapchangepw"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.useradmin.channel"/>
              <not><available file="${work.dir}/.publish-useradmin"/></not>
          </and>
          <then>
              <antcall target="publish-useradmin"/>
              <touch file="${work.dir}/.publish-useradmin"/>
          </then>
      </if>
      <if>
          <and>
              <isset property="run.publish.cms.channel"/>
              <not><available file="${work.dir}/.publish-cms"/></not>
          </and>
          <then>
              <antcall target="publish-cms"/>
              <touch file="${work.dir}/.publish-cms"/>
          </then>
      </if>
    </target>
    <!--  End Driver targets  -->

    <!-- Maven Utilities -->
    <target name="copy-maven-artifact-to-dir">
        <echo>Copying maven artifact ${groupId}:${artifactId}:${version}:${archive.type} to ${todir}</echo>
        <artifact:dependencies filesetId="copy-maven-artifact.filesetId">
            <dependency groupId="${groupId}" artifactId="${artifactId}"
                version="${version}" type="${archive.type}"/>
            <remoteRepository refid="toro.repository" />
        </artifact:dependencies>
        <copy flatten="true" todir="${todir}">
            <fileset refId="copy-maven-artifact.filesetId"/>
        </copy>
    </target>
    <!-- End Maven Utilities -->

    <!-- Common Utilities -->
    <target name="deploy-toro-jar">
        <antcall target="deploy-jar">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="${artifactId}"/>
            <param name="version" value="${maven.project.version}"/>
            <param name="todir" value="${todir}"/>
            <param name="exclusions" value="${exclusions}"/>
        </antcall>
    </target>

    <target name="deploy-jar">
        <antcall target="copy-maven-artifact-to-dir">
            <param name="groupId" value="${groupId}"/>
            <param name="artifactId" value="${artifactId}"/>
            <param name="version" value="${version}"/>
            <param name="archive.type" value="jar"/>
            <param name="todir" value="${todir}"/>
            <param name="exclusions" value="${exclusions}"/>
        </antcall>
    </target>

    <target name="run-hbm2dll">
        <echo>Creating schema for ${groupId}:${artifactId}:${version} with create.only option: #${hibernate.create.only}#</echo>
        <artifact:dependencies pathId="hibernate.classpath">
            <dependency groupId="org.hibernate" artifactId="hibernate"
                version="${hibernate.version}" type="jar"/>
            <dependency groupId="${groupId}" artifactId="${artifactId}"
                version="${version}" type="jar"/>
            <dependency groupId="xerces" artifactId="xercesImpl"
                version="${xercesImpl.version}" type="jar"/>
            <remoteRepository refid="toro.repository" />
            <remoteRepository refid="central.repository" />
        </artifact:dependencies>
        <java classname="org.hibernate.tool.hbm2ddl.SchemaExport">
            <arg line="--config=/hibernate.cfg.xml --properties=${work.dir}/hibernate.properties ${hibernate.create.only}"/>
            <classpath>
                <path refid="db.classpath"/>
                <path refid="hibernate.classpath"/>
            </classpath>
        </java>
    </target>

    <target name="backup-original-file">
    </target>
    <!-- End Common Utilities -->

    <target name="deploy-toro-common">
        <mkdir dir="${toro.data.home}" /> 
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-common"/>
        </antcall>
        <copy overwrite="true" file="${basedir}/properties/uPortal-${uportal.version}/xhtml-theme.xsl"
            todir="${portal.webapp.home}/WEB-INF/classes/org/jasig/portal/layout/tab-column/xhtml-theme"/>
        <copy overwrite="true" outputencoding="utf-8" file="${basedir}/properties/uPortal-${uportal.version}/ajax-preferences.js"
            todir="${portal.webapp.home}/WEB-INF/classes/org/jasig/portal/layout/tab-column/xhtml-theme/common"/>
        <antcall target="common-add-uportal-configurations"/>

        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="toro-systray-channel"/>
            <param name="todir" value="${portal.webapp.home}/WEB-INF/lib"/>
        </antcall>
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-systray-channel"/>
        </antcall>
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="resource-pool"/>
            <param name="todir" value="${tomcat.home}/shared/lib"/>
        </antcall>
    </target>


    <!-- Portlet Targets -->
    <target name="deploy-portlets-common">
        <antcall target="deploy-toro-jar"> 
            <param name="artifactId" value="academus-api"/>
            <param name="todir" value="${tomcat.home}/shared/lib"/>
        </antcall>
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="sso-authentication-cache"/>
            <param name="todir" value="${tomcat.home}/shared/lib"/>
        </antcall>
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="uportal-academus-api"/>
            <param name="todir" value="${portal.webapp.home}/WEB-INF/lib"/>
            <param name="exclusions" value="&lt;exclusions>&lt;exclusion>&lt;groupId>uportal&lt;/groupId>&lt;artifactId>uportal&lt;/artifactId>&lt;/exclusion>&lt;/exclusions>"/>
        </antcall>
        <artifact:dependencies filesetId="messaging-portlet.fileset">
            <dependency groupId="net.unicon.toro" artifactId="messaging-portlet" version="${maven.project.version}" type="war"/>
            <remoteRepository refid="toro.repository" />
        </artifact:dependencies>
        <unjar dest="${work.dir}/toro-portlets-common">
            <fileset refid="messaging-portlet.fileset"/>
            <patternset>
                <include name="WEB-INF/classes/config/messaging-portlet.xml"/>
            </patternset>
        </unjar>
        <copyWithAllPropertiesFilter overwrite="yes" filtering="on" todir="${tomcat.home}/webapps/toro-portlets-common">
            <fileset dir="${work.dir}/toro-portlets-common"/>
        </copyWithAllPropertiesFilter>
    </target> 

    <target name="clean-portlets" depends="
        clean-briefcase-portlet,
        clean-messaging-portlet,
        clean-gateway-portlet,
        clean-web-content-portlet,
        clean-permissions-portlet,
        clean-blojsom
        "/>

    <target name="deploy-portlets-common-webapp">
        <antcall target="deploy-toro-war">
            <param name="webappName" value="toro-portlets-common"/>
            <param name="artifactId" value="portlets-common-webapp"/>
        </antcall>
    </target>

    <target name="common-add-uportal-configurations">
        <copyWithAllPropertiesFilter filtering="on" todir="${work.dir}/common-add-uportal-configurations" file="${basedir}/properties/uPortal-${uportal.version}/common-uPortalConfigurationChanges.xml"/>
        <antcall target="merge-configuration">
            <param name="configfile" value="${work.dir}/common-add-uportal-configurations/common-uPortalConfigurationChanges.xml"/>
            <param name="targetdir" value="${portal.webapp.home}"/>
        </antcall>
    </target>

    <target name="ldap-merge">
        <copyWithAllPropertiesFilter filtering="on" todir="${work.dir}/ldap-merge" file="${basedir}/properties/uPortal-${uportal.version}/ldap-merge-configuration.xml"/>
        <antcall target="merge-configuration">
            <param name="configfile" value="${work.dir}/ldap-merge/ldap-merge-configuration.xml"/>
            <param name="targetdir" value="${portal.webapp.home}"/>
        </antcall>

        <copyWithAllPropertiesFilter filtering="on" todir="${work.dir}/ldap-merge" file="${basedir}/properties/uPortal-${uportal.version}/personDirectory-bean-merge-configuration.xml"/>
        <antcall target="merge-configuration">
            <param name="configfile" value="${work.dir}/ldap-merge/personDirectory-bean-merge-configuration.xml"/>
            <param name="targetdir" value="${portal.webapp.home}"/>
        </antcall>

        <taskdef name="gen-security-context-props" classname="net.unicon.toro.installer.anttask.GenerateSecurityContextProperties" classpath="${basedir}"/>
        <gen-security-context-props/>

        <copyWithAllPropertiesFilter filtering="on" todir="${work.dir}/ldap-merge" file="${basedir}/properties/uPortal-${uportal.version}/security-context-bean-merge-configuration.xml"/>
        <antcall target="merge-configuration">
            <param name="configfile" value="${work.dir}/ldap-merge/security-context-bean-merge-configuration.xml"/>
            <param name="targetdir" value="${portal.webapp.home}"/>
        </antcall>
    </target>

    <target name="ensure-security-contexts-cached">
        <java fork="true" failonerror="true" dir="${work.dir}" classname="net.unicon.toro.installer.tools.EnsureSecurityContextsHaveCaching">
            <classpath>
                <pathelement path="${basedir}"/>
            </classpath>
            <arg value="${portal.webapp.home}"/>
        </java>
    </target>

    <target name="deploy-briefcase-portlet">
        <echo>Deploying Briefcase Portlet</echo>
        <antcall target="deploy-portlet">
            <param name="artifactId" value="briefcase-portlet"/>
            <param name="webappName" value="toro-briefcase-portlet"/>
        </antcall>
    </target>

    <target name="clean-briefcase-portlet" if="briefcase-portlet.active">
        <echo>Cleaning Briefcase Portlet</echo>
        <delete dir="${webapp.home}/toro-briefcase-portlet"/>
    </target>

    <target name="deploy-messaging-portlet">
        <echo>Deploying Messaging Portlet</echo>
        <antcall target="deploy-portlet">
            <param name="artifactId" value="messaging-portlet"/>
            <param name="webappName" value="toro-messaging-portlet"/>
        </antcall>
    </target>

    <target name="clean-messaging-portlet" if="messaging-portlet.active">
        <echo>Cleaning Messaging Portlet</echo>
        <delete dir="${webapp.home}/toro-messaging-portlet"/>
    </target>

    <target name="deploy-permissions-portlet">
        <echo>Deploying Permissions Portlet</echo>
        <antcall target="deploy-portlet">
            <param name="artifactId" value="permissions-portlet"/>
            <param name="webappName" value="toro-permissions-portlet"/>
        </antcall>

        <!-- add the descriptor for each deployed portlet -->
        <available file="${webapp.home}/toro-briefcase-portlet/WEB-INF/classes/config/permissions-portlet-fragment.xml" property="toro-briefcase-portlet.present"/>
        <antcall target="merge-permissions-descriptor-for-briefcase"/>
        <available file="${webapp.home}/toro-messaging-portlet/WEB-INF/classes/config/permissions-portlet-fragment.xml" property="toro-messaging-portlet.present"/>
        <antcall target="merge-permissions-descriptor-for-messaging"/>
        <available file="${webapp.home}/toro-gateway-portlet/WEB-INF/classes/config/permissions-portlet-fragment.xml" property="toro-gateway-portlet.present"/>
        <antcall target="merge-permissions-descriptor-for-gateway"/>
        <available file="${webapp.home}/toro-web-content-portlet/WEB-INF/classes/config/permissions-portlet-fragment.xml" property="toro-web-content-portlet.present"/>
        <antcall target="merge-permissions-descriptor-for-web-content"/>
    </target>

    <target name="deploy-gateway-portlet">
        <echo>Deploying Gateway Portlet</echo>
        <antcall target="deploy-portlet">
            <param name="artifactId" value="gateway-portlet"/>
            <param name="webappName" value="toro-gateway-portlet"/>
        </antcall>
    </target>

    <target name="clean-gateway-portlet" if="gateway-portlet.active">
        <echo>Cleaning Gateway Portlet</echo>
        <delete dir="${webapp.home}/toro-gateway-portlet"/>
    </target>

    <target name="deploy-web-content-portlet">
        <echo>Deploying Web Content Portlet</echo>
        <antcall target="deploy-portlet">
            <param name="artifactId" value="web-content-portlet"/>
            <param name="webappName" value="toro-web-content-portlet"/>
        </antcall>
    </target>

    <target name="clean-web-content-portlet" if="web-content-portlet.active">
        <echo>Cleaning Web Content Portlet</echo>
        <delete dir="${webapp.home}/toro-web-content-portlet"/>
    </target>

    <target name="deploy-blojsom">
        <echo>Deploying Blojsom</echo>
        <antcall target="deploy-toro-war">
            <param name="webappName" value="toro-blojsom"/>
            <param name="artifactId" value="blojsom"/>
        </antcall>
        <property name="gateway-portlet.active" value="yes"/>
        <antcall target="deploy-gateway-portlet"/>
        <copyWithAllPropertiesFilter tofile="${tomcat.host.conf}/toro-blojsom.xml" file="properties/toro-blojsom.xml">
            <filterset>
                <filter token="webappName" value="toro-blojsom"/>
            </filterset>
        </copyWithAllPropertiesFilter>
    </target>

    <target name="clean-blojsom" if="blojsom.active">
        <echo>Cleaning Blojsom</echo>
        <delete dir="${webapp.home}/toro-blojsom"/>
        <property name="gateway-portlet.active" value="yes"/>
        <antcall target="clean-gateway-portlet"/>
    </target>

    <target name="clean-permissions-portlet" if="permissions-portlet.active">
        <echo>Cleaning Permissions Portlet</echo>
        <delete dir="${webapp.home}/toro-permissions-portlet"/>
    </target>

    <target name="publish-briefcase-portlet">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="briefcase-lib"/>
            <param name="channel" value="briefcase-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-gateway-portlet">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="gateway-lib"/>
            <param name="channel" value="gateway-blogger-channel-publish.xml"/>
        </antcall>
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="gateway-lib"/>
            <param name="channel" value="gateway-example-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-messaging-portlet">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="messaging-lib"/>
            <param name="channel" value="messaging-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-permissions-portlet">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="permissions-lib"/>
            <param name="channel" value="permissions-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-web-content-portlet">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="web-content-lib"/>
            <param name="channel" value="web-content-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="initialize-alchemist">
        <echo>Initializing Alchemist</echo>
        <antcall target="run-hbm2dll">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="alchemist"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
    </target>

    <target name="initialize-demetrius">
        <echo>Initializing Demetrius</echo>
        <antcall target="run-hbm2dll">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="demetrius"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
    </target>

    <target name="initialize-mercury">
        <echo>Initializing Mercury</echo>
        <antcall target="run-hbm2dll">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="mercury"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
    </target>

    <target name="initialize-portlets-common">
        <echo>Initializing Portlets Common</echo>
        <antcall target="run-hbm2dll">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="portlets-common-lib"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
    </target>
    <!-- End Portlet Targets -->

    <!-- Channel Targets -->
    <target name="deploy-channels-common">
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="toro-addressbook-channel"/>
            <param name="todir" value="${portal.webapp.home}/WEB-INF/lib"/>
        </antcall>
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-addressbook-channel"/>
        </antcall>
        <antcall target="merge-uportal-configurations">
            <param name="artifactId" value="cdk"/>
        </antcall>
    </target>

    <target name="merge-uportal-configurations">
        <artifact:dependencies filesetId="merge-uportal-configurations.filesetId">
            <dependency groupId="net.unicon.toro" artifactId="${artifactId}" version="${maven.project.version}" type="jar"/>
            <remoteRepository refid="toro.repository" />
        </artifact:dependencies>
        <unjar dest="${work.dir}/${artifactId}-uportal-configurations">
            <fileset refId="merge-uportal-configurations.filesetId"/>
            <patternset>
                <include name="uportal-configuration-merges/**"/>
            </patternset>
        </unjar>
        <antcall target="merge-configuration">
            <param name="configfile" value="${work.dir}/${artifactId}-uportal-configurations/uportal-configuration-merges/uportal-configuration-merges.xml"/>
            <param name="targetdir" value="${portal.webapp.home}"/>
        </antcall>
    </target>

    <target name="extract-resources">
        <available property="resources.exists" file="${artifact.path}"/>
        <condition property="ok.to.extract.resources">
            <or>
                <contains string="${version}" substring="SNAPSHOT"/>
                <not><available file="${target.dir}/.artifact_extracted"/></not>
            </or>
        </condition>
        <antcall target="extract-resources-task">
            <param name="groupId" value="${groupId}"/>
            <param name="artifactId" value="${artifactId}"/>
            <param name="version" value="${version}"/>
            <param name="target.dir" value="${target.dir}"/>
            <param name="archive.type" value="${archive.type}"/>
            <param name="remote.repository" value="${remote.repository}"/>
        </antcall>
        <touch file="${target.dir}/.artifact_extracted"/>
    </target>

     <target name="extract-resources-task" if="ok.to.extract.resources">
         <echo>Extracting resources ${groupId}:${artifactId}:${version}:${archive.type} to ${target.dir}</echo>
        <artifact:dependencies filesetId="extract-resources-task.filesetId">
            <dependency groupId="${groupId}" artifactId="${artifactId}"
                version="${version}" type="${archive.type}"/>
            <remoteRepository refid="${remote.repository}" />
            <!--include name="**/${artifactId}-${version}.${archive.type}"/-->
        </artifact:dependencies>
        <unjar dest="${target.dir}">
            <fileset refId="extract-resources-task.filesetId"/>
             <patternset>
                 <include name="*.jsp"/>
                 <include name="*.html"/>
                 <include name="*.html"/>
                 <include name="WEB-INF/**"/>
                 <include name="html/**"/>
                 <include name="templates/**"/>
                 <include name="wml/**"/>
                 <include name="javascript/**"/>
                 <include name="media/**"/>
             </patternset>
        </unjar>
    </target>

    <target name="deploy-toro-resources">
        <antcall target="extract-artifact">
          <param name="groupId" value="net.unicon.toro"/>
          <param name="artifactId" value="${artifactId}"/>
          <param name="version" value="${maven.project.version}"/>
          <param name="target.dir" value="${work.dir}/${artifactId}-resources"/>
          <param name="archive.type" value="jar"/>
          <param name="remote.repository" value="uportal.repository"/>
        </antcall>
        <antcall target="copy-local-resources-filtered">
            <param name="resources.dir" value="${work.dir}/${artifactId}-resources"/>
            <param name="target.dir" value="${portal.webapp.home}"/>
        </antcall>
    </target>

    <target name="deploy-survey-channel">
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="toro-survey-channel"/>
            <param name="todir" value="${portal.webapp.home}/WEB-INF/lib"/>
        </antcall>
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-survey-channel"/>
        </antcall>
        <mkdir dir="${toro.data.home}/survey"/>
        <antcall target="merge-uportal-configurations">
            <param name="artifactId" value="toro-survey-channel"/>
        </antcall>
    </target>

    <target name="deploy-cms-channel">
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="toro-cms-channel"/>
            <param name="todir" value="${portal.webapp.home}/WEB-INF/lib"/>
        </antcall>
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-cms-channel"/>
        </antcall>
        <artifact:dependencies fileSetId="cdk.filesetId">
            <dependency groupId="net.unicon.toro" artifactId="cdk"
                        version="${maven.project.version}" type="jar"/>
            <remoteRepository refid="toro.repository" />
        </artifact:dependencies>
        <unjar dest="${work.dir}/uportal-properties/properties">
            <fileset refId="cdk.filesetId"/>
            <patternset>
                <include name="**/academus-apps-lms.properties"/>
                <include name="**/academus-apps.properties"/>
                <include name="**/academus-lms.properties"/>
                <include name="**/factoryImpl.properties"/>
                <include name="**/ToroPersonDirs.xml"/>
                <include name="**/unicon-service.properties"/>
                <include name="**/academus-portal.properties"/>
                <include name="**/common-factory.properties"/>
            </patternset>
        </unjar>
        <moveWithAllPropertiesFilter filtering="on" todir="${work.dir}/uportal-properties/properties">
            <fileset dir="${work.dir}/uportal-properties/properties/WEB-INF/classes/properties">
                <include name="academus-apps-lms.properties"/>
                <include name="academus-apps.properties"/>
                <include name="academus-lms.properties"/>
                <include name="factoryImpl.properties"/>
                <include name="ToroPersonDirs.xml"/>
                <include name="unicon-service.properties"/>
                <include name="academus-portal.properties"/>
                <include name="common-factory.properties"/>
            </fileset>
        </moveWithAllPropertiesFilter>
    </target>

    <target name="deploy-news-channel">
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="toro-news-channel"/>
            <param name="todir" value="${portal.webapp.home}/WEB-INF/lib"/>
        </antcall>
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-news-channel"/>
        </antcall>
        <mkdir dir="${toro.data.home}/campus_news"/>
    </target>

    <target name="deploy-classifieds-channel">
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="toro-classifieds-channel"/>
            <param name="todir" value="${portal.webapp.home}/WEB-INF/lib"/>
        </antcall>
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-classifieds-channel"/>
        </antcall>
        <mkdir dir="${toro.data.home}/classifieds"/>
    </target>

    <target name="deploy-calendar-channel">
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-calendar-channel"/>
        </antcall>
    </target>

    <target name="deploy-notes-channel">
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="toro-notes-channel"/>
            <param name="todir" value="${portal.webapp.home}/WEB-INF/lib"/>
        </antcall>
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-notes-channel"/>
        </antcall>
    </target>

    <target name="deploy-bookmarks-channel">
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="toro-bookmarks-channel"/>
            <param name="todir" value="${portal.webapp.home}/WEB-INF/lib"/>
        </antcall>
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-bookmarks-channel"/>
        </antcall>
    </target>

    <target name="deploy-campusannouncement-channel">
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="toro-campusannouncement-channel"/>
            <param name="todir" value="${portal.webapp.home}/WEB-INF/lib"/>
        </antcall>
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-campusannouncement-channel"/>
        </antcall>
    </target>

    <target name="deploy-ldapchangepw-channel">
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="toro-ldapchangepw-channel"/>
            <param name="todir" value="${portal.webapp.home}/WEB-INF/lib"/>
        </antcall>
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-ldapchangepw-channel"/>
        </antcall>
    </target>

    <target name="deploy-useradmin-channel">
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="toro-useradmin-channel"/>
            <param name="todir" value="${portal.webapp.home}/WEB-INF/lib"/>
        </antcall>
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-useradmin-channel"/>
        </antcall>
    </target>

    <target name="deploy-login-channel">
        <antcall target="deploy-toro-jar">
            <param name="artifactId" value="toro-login-channel"/>
            <param name="todir" value="${portal.webapp.home}/WEB-INF/lib"/>
        </antcall>
        <antcall target="deploy-toro-resources">
            <param name="artifactId" value="toro-login-channel"/>
        </antcall>
    </target>

    <target name="initialize-toro-common">
        <echo>Initializing Toro Common</echo>
        <antcall target="uportal-dbloader-tables">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-common"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
        <antcall target="uportal-dbloader-data">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-common"/>
            <param name="version" value="${maven.project.version}"/>
            <param name="tables.xml" value="/properties/db/dbloader-tables.xml"/>
        </antcall>
    </target>

    <target name="initialize-access-controller">
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_CONTROLLER (ACCESS_CONTROLLER_ID, NAME) VALUES (1, 'personal-resources');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_CONTROLLER (ACCESS_CONTROLLER_ID, NAME) VALUES (2, 'shared-resources');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_CONTROLLER (ACCESS_CONTROLLER_ID, NAME) VALUES (3, 'notifications-rdbms');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_CONTROLLER (ACCESS_CONTROLLER_ID, NAME) VALUES (4, 'personal-resources-t-i');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_CONTROLLER (ACCESS_CONTROLLER_ID, NAME) VALUES (5, 'personal-resources-p-i');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_CONTROLLER (ACCESS_CONTROLLER_ID, NAME) VALUES (6, 'notifications-t-i');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_CONTROLLER (ACCESS_CONTROLLER_ID, NAME) VALUES (7, 'notifications-p-i');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_CONTROLLER (ACCESS_CONTROLLER_ID, NAME) VALUES (8, 'blog-default-p');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_CONTROLLER (ACCESS_CONTROLLER_ID, NAME) VALUES (9, 'blog-blojsomA-p');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_CONTROLLER (ACCESS_CONTROLLER_ID, NAME) VALUES (10, 'blog-blojsomB-p');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_CONTROLLER (ACCESS_CONTROLLER_ID, NAME) VALUES (11, 'blog-blojsomC-p');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_CONTROLLER (ACCESS_CONTROLLER_ID, NAME) VALUES (12, 'content-p');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_ENTRY (ACCESS_ENTRY_ID, IDENTITY_TYPE, IDENTITY_NAME, TARGET, ACCESS_CONTROLLER_ID) VALUES (1, 0, 'admin', 'MSG://net.unicon.academus.apps.messaging.RdbmsMessageFactoryCreator$CreatorRdbmsMessageFactory/notifications/admin', 6);
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_ENTRY (ACCESS_ENTRY_ID, IDENTITY_TYPE, IDENTITY_NAME, TARGET, ACCESS_CONTROLLER_ID) VALUES (2, 1, 'Everyone', 'dummy://net.unicon.alchemist.access.permissions.Dummy/', 7);
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_ENTRY (ACCESS_ENTRY_ID, IDENTITY_TYPE, IDENTITY_NAME, TARGET, ACCESS_CONTROLLER_ID) VALUES (3, 0, 'admin', 'dummy://net.unicon.alchemist.access.permissions.Dummy/', 8);
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_ENTRY (ACCESS_ENTRY_ID, IDENTITY_TYPE, IDENTITY_NAME, TARGET, ACCESS_CONTROLLER_ID) VALUES (4, 0, 'demo', 'MSG://net.unicon.academus.apps.messaging.RdbmsMessageFactoryCreator$CreatorRdbmsMessageFactory/notifications/demo', 6);
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_ENTRY (ACCESS_ENTRY_ID, IDENTITY_TYPE, IDENTITY_NAME, TARGET, ACCESS_CONTROLLER_ID) VALUES (5, 0, 'student', 'MSG://net.unicon.academus.apps.messaging.RdbmsMessageFactoryCreator$CreatorRdbmsMessageFactory/notifications/student', 6);
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_ENTRY (ACCESS_ENTRY_ID, IDENTITY_TYPE, IDENTITY_NAME, TARGET, ACCESS_CONTROLLER_ID) VALUES (6, 0, 'staff', 'MSG://net.unicon.academus.apps.messaging.RdbmsMessageFactoryCreator$CreatorRdbmsMessageFactory/notifications/staff', 6);
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_ENTRY (ACCESS_ENTRY_ID, IDENTITY_TYPE, IDENTITY_NAME, TARGET, ACCESS_CONTROLLER_ID) VALUES (7, 0, 'faculty', 'MSG://net.unicon.academus.apps.messaging.RdbmsMessageFactoryCreator$CreatorRdbmsMessageFactory/notifications/faculty', 6);
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_ENTRY (ACCESS_ENTRY_ID, IDENTITY_TYPE, IDENTITY_NAME, TARGET, ACCESS_CONTROLLER_ID) VALUES (8, 1, 'Everyone - Staff - Web Content Managers', 'dummy://net.unicon.alchemist.access.permissions.Dummy/', 12);
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (1, 65536, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (2, 1, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (2, 2, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (2, 3, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (2, 4, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (3, 1, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (3, 2, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (3, 3, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (3, 4, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (4, 65536, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (5, 65536, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (6, 65536, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (7, 65536, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO ACCESS_TYPES (ACCESS_ENTRY_ID, ACCESS_TYPE, STATUS) VALUES (8, 1, 'T');
           ]]>
       </sql>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[
INSERT INTO UNI_SEQUENCE (NAME, NEXT_INDEX) VALUES ('RdbmsAccessBroker', 9);
           ]]>
       </sql>
    </target>

    <target name="initialize-cdk">
        <echo>Initializing CDK</echo>
        <antcall target="uportal-dbloader-tables">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="cdk"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
        <antcall target="uportal-dbloader-data">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="cdk"/>
            <param name="version" value="${maven.project.version}"/>
            <param name="tables.xml" value="/properties/db/dbloader-tables.xml"/>
        </antcall>
        <antcall target="uportal-dbloader-tables">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-addressbook-channel"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
    </target>

    <target name="initialize-cms">
        <echo>Initializing CMS</echo>
        <antcall target="uportal-dbloader-tables">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-cms-channel"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>

        <artifact:dependencies pathId="cmsGroupInitialization.classpath">
            <dependency groupId="net.unicon.toro" artifactId="cdk"
                version="${maven.project.version}" type="jar"/>
            <remoteRepository refid="toro.repository" />
        </artifact:dependencies>
        <java fork="true" failonerror="true" dir="${work.dir}" classname="net.unicon.toro.installer.tools.CmsGroupInitialization">
          <classpath>
            <pathelement path="${work.dir}/uportal-properties"/>
            <pathelement path="${basedir}"/>
            <path refId="cmsGroupInitialization.classpath"/>
            <path refId="uportal.classpath"/>
            <path refId="db.classpath"/>
            <fileset refId="uportal-jar.fileset"/>
          </classpath>
          <arg value="-n"/>
          <arg value="${channel}"/>
        </java> 

        <artifact:dependencies fileSetId="data.loader.file">
           <dependency groupId="net.unicon.toro" artifactId="toro-cms-channel"
                       version="${maven.project.version}" type="jar"/>
            <remoteRepository refid="toro.repository" />
       </artifact:dependencies>
       <unjar dest="${work.dir}">
           <fileset refId="data.loader.file"/>
           <patternset>
               <include name="**/dbloader-uportal-data.xml"/>
           </patternset>
       </unjar>
       <move filtering="on" file="${work.dir}/dbloader-uportal-data.xml" todir="${work.dir}/uportal-properties/properties/db">
           <filterset>
               <filtersfile file="${work.dir}/roleGroupKeys.properties"/>
           </filterset>
       </move>
       <java fork="true" failonerror="true" dir="${basedir}" classname="org.jasig.portal.tools.dbloader.DbLoader">
           <classpath>
               <pathelement path="${work.dir}/uportal-properties"/>
               <fileset refId="uportal-jar.fileset"/>
               <path refId="uportal.classpath"/>
               <path refId="db.classpath"/>
           </classpath>

           <arg line="-nD -nC -P -t /properties/db/tables.xml -d /properties/db/dbloader-uportal-data.xml"/>
       </java>
    </target>

    <target name="initialize-survey">
        <echo>Initializing Survey Channel</echo>
        <antcall target="uportal-dbloader-tables">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-survey-channel"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
        <antcall target="uportal-dbloader-data">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-survey-channel"/>
            <param name="version" value="${maven.project.version}"/>
            <param name="data.xml" value="/properties/db/dbloader-uportal-data.xml"/>
        </antcall>
    </target>

    <target name="initialize-news">
        <echo>Initializing News Channel</echo>
        <antcall target="uportal-dbloader-tables">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-news-channel"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
        <antcall target="uportal-dbloader-data">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-news-channel"/>
            <param name="version" value="${maven.project.version}"/>
            <param name="data.xml" value="/properties/db/dbloader-uportal-data.xml"/>
        </antcall>
        <antcall target="uportal-dbloader-data">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-news-channel"/>
            <param name="version" value="${maven.project.version}"/>
            <param name="tables.xml" value="/properties/db/dbloader-tables.xml"/>
        </antcall>
    </target>

    <target name="initialize-classifieds">
        <echo>Initializing Classifieds Channel</echo>
        <antcall target="uportal-dbloader-tables">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-classifieds-channel"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
        <antcall target="uportal-dbloader-data">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-classifieds-channel"/>
            <param name="version" value="${maven.project.version}"/>
            <param name="data.xml" value="/properties/db/dbloader-uportal-data.xml"/>
        </antcall>
        <antcall target="uportal-dbloader-data">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-classifieds-channel"/>
            <param name="version" value="${maven.project.version}"/>
            <param name="tables.xml" value="/properties/db/dbloader-tables.xml"/>
        </antcall>
    </target>

    <target name="initialize-calendar">
        <echo>Initializing Calendar Channel</echo>
        <antcall target="uportal-dbloader-tables">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-calendar-channel"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
        <antcall target="uportal-dbloader-data">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-calendar-channel"/>
            <param name="version" value="${maven.project.version}"/>
            <param name="data.xml" value="/properties/db/dbloader-uportal-data.xml"/>
        </antcall>
    </target>

    <target name="initialize-notes">
        <echo>Initializing Notes Channel</echo>
        <antcall target="uportal-dbloader-tables">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-notes-channel"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
    </target>

    <target name="initialize-bookmarks">
        <echo>Initializing Bookmarks Channel</echo>
        <antcall target="uportal-dbloader-tables">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-bookmarks-channel"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
    </target>

    <target name="initialize-campusannouncement">
        <echo>Initializing Campus Announcements Channel</echo>
        <antcall target="uportal-dbloader-tables">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-campusannouncement-channel"/>
            <param name="version" value="${maven.project.version}"/>
        </antcall>
        <antcall target="uportal-dbloader-tables">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="toro-campusannouncement-channel"/>
            <param name="version" value="${maven.project.version}"/>
            <param name="data.xml" value="/properties/db/dbloader-uportal-data.xml"/>
        </antcall>
    </target>

    <target name="publish-systray">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-systray-channel"/>
            <param name="channel" value="systray-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-addressbook">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-addressbook-channel"/>
            <param name="channel" value="addressbook-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-cms">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-cms-channel"/>
            <param name="channel" value="cms-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-survey">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-survey-channel"/>
            <param name="channel" value="poll-channel-publish.xml"/>
        </antcall>
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-survey-channel"/>
            <param name="channel" value="survey-channel-publish.xml"/>
        </antcall>
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-survey-channel"/>
            <param name="channel" value="survey-author-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-news">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-news-channel"/>
            <param name="channel" value="news-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-classifieds">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-classifieds-channel"/>
            <param name="channel" value="classifieds-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-calendar">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-calendar-channel"/>
            <param name="channel" value="calendar-channel-publish.xml"/>
        </antcall>
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-calendar-channel"/>
            <param name="channel" value="calendar-events-channel-publish.xml"/>
        </antcall>
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-calendar-channel"/>
            <param name="channel" value="calendar-tasks-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-notes">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-notes-channel"/>
            <param name="channel" value="notes-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-bookmarks">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-bookmarks-channel"/>
            <param name="channel" value="bookmarks-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-campusannouncement">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-campusannouncement-channel"/>
            <param name="channel" value="campusannouncement-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-ldapchangepw">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-ldapchangepw-channel"/>
            <param name="channel" value="ldapchangepw-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-useradmin">
        <antcall target="publish-toro-channel">
            <param name="artifactId" value="toro-useradmin-channel"/>
            <param name="channel" value="useradmin-channel-publish.xml"/>
        </antcall>
    </target>

    <target name="publish-login">
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>

           <![CDATA[update up_channel set chan_class='net.unicon.portal.channels.login.CLogin' where chan_id=99;]]>
       </sql>
    </target>

    <target name="publish-toro-channel">
        <echo>Publishing channel net.unicon.toro:${artifactId}:${maven.project.version}:jar</echo>
        <artifact:dependencies pathId="publish-toro-channel.classpath">
            <dependency groupId="net.unicon.toro" artifactId="${artifactId}"
                version="${maven.project.version}" type="jar"/>
            <remoteRepository refid="toro.repository" />
        </artifact:dependencies>
        <java fork="true" failonerror="true" dir="${basedir}" classname="org.jasig.portal.tools.chanpub.ChannelPublisher">
          <classpath>
            <path refId="publish-toro-channel.classpath"/>
            <pathelement path="${work.dir}/uportal-properties"/>
            <pathelement path="${work.dir}/${upPublishArtifactId}-${maven.project.version}"/>
            <pathelement path="${basedir}"/>
            <path refId="uportal.classpath"/>
            <path refId="db.classpath"/>
            <fileset refId="uportal-jar.fileset"/>
          </classpath>
          <arg value="-n"/>
          <arg value="${channel}"/>
        </java> 
    </target>

    <!-- End Channel Targets -->

    <!-- uPortal Targets -->

    <echo>run.remote.config=${run.remote.config}</echo>
    <!-- don't fetch artifacts when in remote-config mode -->
    <if>
        <equals arg1="${run.remote.config}" arg2="false"/>
        <then>
            <artifact:dependencies pathId="uportal.classpath">
              <dependency groupId="org.apache.pluto" artifactId="pluto"
                version="${pluto.version}" type="jar"/>
              <dependency groupId="javax.servlet" artifactId="servlet-api"
                version="${servlet-api.version}" type="jar"/>
              <dependency groupId="commons-dbcp" artifactId="commons-dbcp"
                  version="${commons-dbcp.version}" type="jar"/>
              <dependency groupId="commons-logging" artifactId="commons-logging"
                  version="${commons-logging.version}" type="jar"/>
              <dependency groupId="org.springframework" artifactId="spring"
                  version="${springframework.version}" type="jar"/>
              <dependency groupId="backport-util-concurrent" artifactId="backport-util-concurrent"
                  version="${backport-util-concurrent.version}" type="jar"/>
              <dependency groupId="com.whirlycott" artifactId="whirlycache"
                  version="${whirlycache.version}" type="jar"/>
              <dependency groupId="dom4j" artifactId="dom4j"
                  version="${dom4j.version}" type="jar"/>
              <dependency groupId="jaxen" artifactId="jaxen"
                  version="${jaxen.version}" type="jar"/>
              <dependency groupId="commons-jexl" artifactId="commons-jexl"
                  version="${commons-jexl.version}" type="jar"/>
              <remoteRepository refid="toro.repository" />
              <remoteRepository refid="central.repository" />
            </artifact:dependencies>

            <artifact:dependencies filesetId="uportal-jar.fileset">
              <dependency groupId="org.jasig.uportal" artifactId="uportal"
                  version="${uportal.version}" type="jar"/>
              <remoteRepository refid="uportal.repository" />
            </artifact:dependencies>
        </then>
    </if>

    <target name="deploy-uportal" if="run.uportal.deploy">
        <echo>Deploying uPortal ${uportal.version}</echo>
        <condition property="postgres.driver">
            <contains string="${jdbc.driver}" substring="postgres"/>
        </condition>
        <condition property="oracle.driver">
            <contains string="${jdbc.driver}" substring="oracle"/>
        </condition>
        <condition property="mysql.driver">
            <contains string="${jdbc.driver}" substring="mysql"/>
        </condition>
        <condition property="jtds.driver">
            <contains string="${jdbc.driver}" substring="jtds"/>
        </condition>
        <condition property="jnetdirect.driver">
            <contains string="${jdbc.driver}" substring="jnetdirect"/>
        </condition>
        <antcall target="execute-deploy-uportal"/>
    </target>

    <target name="extract-uportal-jar">
        <antcall target="extract-artifact">
          <param name="groupId" value="org.jasig.uportal"/>
          <param name="artifactId" value="uportal"/>
          <param name="version" value="${uportal.version}"/>
          <param name="target.dir" value="${work.dir}/uportal-${uportal.version}"/>
          <param name="archive.type" value="jar"/>
          <param name="remote.repository" value="uportal.repository"/>
        </antcall>
    </target>

    <target name="extract-uportal-war">
        <antcall target="extract-artifact">
          <param name="groupId" value="org.jasig.uportal"/>
          <param name="artifactId" value="uportal-war"/>
          <param name="version" value="${uportal.version}"/>
          <param name="target.dir" value="${work.dir}/uportal-${uportal.version}"/>
          <param name="archive.type" value="war"/>
          <param name="remote.repository" value="uportal.repository"/>
        </antcall>
    </target>

    <target name="execute-deploy-uportal">

        <antcall target="extract-uportal-war"/>
 
         <!-- Copy the contents of the build directory -->
         <mkdir     dir="${portal.webapp.home}"/>
         <copy    todir="${portal.webapp.home}">
             <fileset dir="${work.dir}/uportal-${uportal.version}" excludes="stylesheets/**"/>
         </copy>
 
 
         <!-- These are Tomcat-specific!  We need to think about a new property
              that lets us specify the appropriate directory for other servers
         -->
         <artifact:dependencies filesetId="lib.container-shared">
             <dependency groupId="org.apache.pluto" artifactId="pluto"
                 version="${pluto.version}" type="jar"/>
             <dependency groupId="taglibs" artifactId="standard"
                 version="${standard.version}" type="jar"/>
             <dependency groupId="javax.servlet" artifactId="jstl"
                 version="${jstl.version}" type="jar"/>
             <dependency groupId="javax/portlet" artifactId="portlet-api"
                 version="${portlet-api.version}" type="jar"/>
             <remoteRepository refid="toro.repository" />
             <remoteRepository refid="central.repository" />
         </artifact:dependencies>
         <copy flatten="true" todir="${tomcat.home}/shared/lib">
             <fileset refId="lib.container-shared"/>
         </copy>
           
         <mkdir dir="${tomcat.home}/shared/classes/org/jasig/portal/container"/>
         <copy todir="${tomcat.home}/shared/classes/org/jasig/portal/container"
             file="${work.dir}/uportal-${uportal.version}/WEB-INF/classes/org/jasig/portal/container/PortletServlet.class"/>

         <artifact:dependencies filesetId="lib.container-common-endorsed">
             <dependency groupId="xalan" artifactId="xalan"
                 version="${xalan.version}" type="jar"/>
             <remoteRepository refid="central.repository" />
         </artifact:dependencies>
         <copy flatten="true" todir="${tomcat.home}/common/endorsed">
             <fileset refId="lib.container-common-endorsed"/>
         </copy>
         <delete>
             <fileset dir="${tomcat.home}/common/endorsed">
                 <include name="xml-api*"/>
             </fileset>
         </delete>
           
         <copy flatten="true" todir="${tomcat.home}/common/lib">
             <fileset refId="db.fileset"/>
         </copy>
 
         <!-- This is Tomcat-specific and server name-specific!
              We need to find out the best way to ensure cross-context
              behavior in all servlet containers.
         -->
           
   
            <!--
                   Copy context configuration into the Tomcat server configuration directory so that Tomcat will configure the
                    context properly.
                    
                    In the "dist" target, the .war produced includes this context declaration in its /META-INF/.
               -->
 
           <copyWithAllPropertiesFilter tofile="${tomcat.host.conf}/${portal.webapp.name}.xml"
               file="${basedir}/properties/uPortal-${uportal.version}/context.xml"
               overwrite="true">
               <filterset>
                   <filter token="webappName" value="${portal.webapp.name}"/>
               </filterset>
           </copyWithAllPropertiesFilter>
           <copy todir="${tomcat.host.conf}" file="${work.dir}/uportal-${uportal.version}/WEB-INF/classes/properties/proxyportlet.xml"/>
 
             <!-- Deploy classes to support the modified version of WSRP4J's proxyportlet.
                  Consider making these classes part of the proxyportlet.war distribution.
             -->
         <mkdir     dir="${portal.webapp.home}/../proxyportlet/WEB-INF/classes/org/jasig/portal/wsrp/consumer/portlet"/>
         <copy    todir="${portal.webapp.home}/../proxyportlet/WEB-INF/classes/org/jasig/portal/wsrp/consumer/portlet">
             <fileset dir="${work.dir}/uportal-${uportal.version}/WEB-INF/classes/org/jasig/portal/wsrp/consumer/portlet"/>
         </copy>
 
       <copyWithAllPropertiesFilter tofile="${portal.webapp.home}/WEB-INF/classes/log4j.properties"
           file="${basedir}/properties/uPortal-${uportal.version}/log4j.properties"
           overwrite="true"/>

       <copyWithAllPropertiesFilter tofile="${portal.webapp.home}/WEB-INF/classes/properties/portal.properties"
           file="${basedir}/properties/uPortal-${uportal.version}/portal.properties"
           overwrite="true"/>
   </target>

   <target name="uportal-add-additional-constraints">
       <echo>Adding additional uportal constraints</echo>
       <sql
           driver="${jdbc.driver}"
           url="${jdbc.url}"
           userid="${jdbc.user}"
           password="${jdbc.password}"
           onerror="continue"
           src="${basedir}/db/uportal-additional-constraints-${db.platform}.sql">
           <classpath>
               <path refId="db.classpath"/>
           </classpath>
       </sql>
   </target>

   <target name="create-uportal-properties">
       <mkdir dir="${work.dir}/uportal-properties/properties/db"/>
       <mkdir dir="${work.dir}/uportal-properties/properties/chanpub"/>
       <copy overwrite="true" todir="${work.dir}/uportal-properties/org/jasig/portal/container/deploy">
           <fileset dir="${basedir}/properties/uPortal-${uportal.version}">
               <include name="*.crn"/>
           </fileset>
       </copy>
       <copy overwrite="true" todir="${work.dir}/uportal-properties">
           <fileset dir="${basedir}/properties">
               <include name="log4j.properties"/>
           </fileset>
       </copy>
       <copy overwrite="true" todir="${basedir}">
           <fileset dir="${basedir}/properties/uPortal-${uportal.version}">
               <include name="*.dtd"/>
           </fileset>
       </copy>
       <copy overwrite="true" todir="${basedir}/dtd">
           <fileset dir="${basedir}/properties/uPortal-${uportal.version}">
               <include name="*.dtd"/>
           </fileset>
       </copy>
       <copyWithAllPropertiesFilter overwrite="true" filtering="on" tofile="${work.dir}/uportal-properties/properties/rdbm.properties" file="${basedir}/properties/uPortal-${uportal.version}/rdbm.properties"/>
       <copy overwrite="true" todir="${work.dir}/uportal-properties/properties/chanpub">
           <fileset dir="${basedir}/properties/uPortal-${uportal.version}/chanpub"/>
       </copy>

       <!-- constructing a dbloader.xml based on the jdbc properties -->
       <copy overwrite="true" todir="${work.dir}/uportal-properties/properties/db" file="${basedir}/properties/uPortal-${uportal.version}/dbloader.xml"/>
       <java outputproperty="db.meta.data" fork="true" failonerror="false" dir="${basedir}" classname="net.unicon.toro.installer.dbloader.DbVersion">
           <classpath>
               <pathelement path="${basedir}"/>
               <path refId="uportal.classpath"/>
               <path refId="db.classpath"/>
           </classpath>
           <arg line="${jdbc.driver} ${jdbc.url} ${jdbc.user} ${jdbc.password}"/>
       </java>
       <if>
           <not>
               <contains string="${db.meta.data}" substring="db-name>"/>
           </not>
           <then>
               <fail>

DbVersion utility failed.

jdbc.driver=${jdbc.driver}
jdbc.url=${jdbc.url}
jdbc.user=${jdbc.user}
jdbc.password=${jdbc.password}

Message: ${db.meta.data}
               </fail>
           </then>
       </if>
       <echo>db.meta.data =\n${db.meta.data}</echo>
       <copy overwrite="true" todir="${work.dir}" file="${basedir}/properties/dbloader-${db.platform}-mapping.xml">
           <filterset>
               <filter token="db.meta.data" value="${db.meta.data}"/>
           </filterset>
       </copy>
       <antcall target="merge-configuration">
           <param name="configfile" value="${work.dir}/dbloader-${db.platform}-mapping.xml"/>
           <param name="targetdir" value="${work.dir}/uportal-properties"/>
       </antcall>
   </target>

   <target name="uportal-pubchan">
     <echo>uPortal Channel Publishing</echo>
     <property name="channel" value="all"/>

     <java fork="true" failonerror="true" dir="${basedir}" classname="org.jasig.portal.tools.chanpub.ChannelPublisher">
       <classpath>
         <pathelement path="${work.dir}/uportal-properties"/>
         <path refId="uportal.classpath"/>
         <path refId="db.classpath"/>
         <fileset refId="uportal-jar.fileset"/>
       </classpath>
       <arg value="-n"/>
       <arg value="${channel}"/>
     </java> 
   </target>

   <target name="uportal-i18n-db">
     <echo>uPortal i18n Initialization</echo>
     <property name="usetable" value="-t"/>
     <property name="tablefile" value="/properties/db/tables-i18n.xml"/>
     <property name="usedata" value="-d"/>
     <property name="datafile" value="/properties/db/data-i18n.xml"/>
     <property name="createscript" value=" "/>
     <property name="droptables" value="${uportal.db.droptables.arg}"/>
     <property name="createtables" value=" "/>
     <property name="populatetables" value=" "/>
     <echo>Running DbLoader with droptables option: #${uportal.db.droptables.arg}#</echo>
     <java fork="true" failonerror="true" dir="${basedir}" classname="org.jasig.portal.tools.dbloader.DbLoader">
       <classpath>
         <pathelement path="${work.dir}/uportal-properties"/>
         <fileset refId="uportal-jar.fileset"/>
         <path refId="uportal.classpath"/>
         <path refId="db.classpath"/>
       </classpath>

       <arg value="${usetable}"/>
       <arg value="${tablefile}"/>
       <arg value="${usedata}"/>
       <arg value="${datafile}"/>
       <arg value="${createscript}"/>
       <arg value="${droptables}"/>
       <arg value="${createtables}"/>
       <arg value="${populatetables}"/>
     </java>
   </target>

   <target name="uportal-pubfragments">
     <echo>uPortal publish fragments</echo>
     <property name="tempDataXML" value="/properties/al/fragment.temp.data.xml"/>
     <property name="fragmentFile" value=" "/>
     <echo message="Resetting layout fragments configuration."/>    <!-- create data.xml file -->
     <java fork="true" failonerror="true" dir="${basedir}" classname="org.jasig.portal.layout.alm.tool.FragmentLoader">
         <arg value="${fragmentFile}"/>
         <arg value="${work.dir}/uportal-${uportal.version}/WEB-INF/classes${tempDataXML}"/>
         <classpath>
             <pathelement path="${work.dir}/uportal-properties"/>
             <fileset refId="uportal-jar.fileset"/>
             <path refId="uportal.classpath"/>
             <path refId="db.classpath"/>
         </classpath>
     </java>
     <available file="${work.dir}/uportal-${uportal.version}/WEB-INF/classes${tempDataXML}"
         property="temp.fragment.data.file.present"/>
     <antcall target="uportal-pubfragments-load"/>
   </target>

   <target name="uportal-pubfragments-load" if="temp.fragment.data.file.present">
    <echo>Executing uPortal publish fragments</echo>
    <java fork="true" failonerror="true" dir="${build.home}/WEB-INF/classes"
          classname="org.jasig.portal.tools.dbloader.DbLoader">
        <arg value="-d"/>
        <arg value="${tempDataXML}"/>
        <arg value="-nC"/>
        <arg value="-nD"/>
        <arg value="-P"/>
        <classpath>
             <pathelement path="${work.dir}/uportal-properties"/>
             <fileset refId="uportal-jar.fileset"/>
             <path refId="uportal.classpath"/>
             <path refId="db.classpath"/>
        </classpath>
    </java>
    <delete file="${build.home}/WEB-INF/classes/${tempDataXML}"/>
  </target>

    <!-- don't fetch artifacts when in remote-config mode -->
    <if>
        <equals arg1="${run.remote.config}" arg2="false"/>
        <then>
            <artifact:dependencies pathId="cernunnos.classpath">
                <dependency groupId="org.danann" artifactId="cernunnos"
                    version="${cernunnos.version}" type="jar"/>
                <remoteRepository refid="toro.repository" />
            </artifact:dependencies>
        </then>
    </if>

   <target name="uportal-deploy-testsuite-portlet">
       <antcall target="uportal-deploy-portlet">
           <param name="groupId" value="org.jasig.portlet"/>
           <param name="artifactId" value="testsuite"/>
           <param name="version" value="1.0.0-SNAPSHOT"/>
       </antcall>
   </target>

   <target name="uportal-deploy-proxyportlet-portlet">
       <antcall target="uportal-deploy-portlet">
           <param name="groupId" value="org.jasig.portlet"/>
           <param name="artifactId" value="proxyportlet"/>
           <param name="version" value="1.0.0-SNAPSHOT"/>
       </antcall>
   </target>

   <target name="uportal-deploy-bookmarks-portlet">
       <antcall target="uportal-deploy-portlet">
           <param name="groupId" value="org.jasig.portlet"/>
           <param name="artifactId" value="BookmarksPortlet"/>
           <param name="version" value="1.0.7"/>
       </antcall>
   </target>

   <target name="uportal-deploy-rss-portlet">
       <antcall target="uportal-deploy-portlet">
           <param name="groupId" value="org.jasig.portlet"/>
           <param name="artifactId" value="RssPortlet"/>
           <param name="version" value="1.0.0-SNAPSHOT"/>
       </antcall>
   </target>

   <target name="uportal-deploy-google-portlet">
       <antcall target="uportal-deploy-portlet">
           <param name="groupId" value="org.jasig.portlet"/>
           <param name="artifactId" value="googleportlet"/>
           <param name="version" value="1.0.0-SNAPSHOT"/>
       </antcall>
   </target>

   <target name="uportal-deploy-portlet">
       <echo>uPortal deploying ${groupId}:${artifactId}:${version} portlet</echo>
     <!--mkdir dir="${work.dir}/uportal-${uportal.version}/lib/portlets"/>
     <copy todir="${work.dir}/lib/portlets">
         <fileset dir="./lib/portlets"/>
     </copy-->
     <!--java fork="true" failonerror="true" dir="${work.dir}/uportal-${uportal.version}" classname="org.danann.cernunnos.runtime.Main"-->


     <artifact:dependencies filesetId="uportal-deploy-portlet.filesetId">
         <dependency groupId="${groupId}" artifactId="${artifactId}"
             version="${version}" type="war"/>
         <remoteRepository refid="uportal.repository" />
     </artifact:dependencies>
     <copy flatten="true" tofile="${basedir}/lib/portlets/${artifactId}.war">
         <fileset refId="uportal-deploy-portlet.filesetId"/>
     </copy>
     <java fork="true" failonerror="true" dir="${basedir}" classname="org.danann.cernunnos.runtime.Main">
       <classpath>
         <pathelement path="${work.dir}/uportal-properties"/>
         <fileset refId="uportal-jar.fileset"/>
         <path refId="uportal.classpath"/>
         <path refId="db.classpath"/>
         <path refId="cernunnos.classpath"/>
       </classpath>
       <arg value="classpath://org/jasig/portal/container/deploy/deploy-portlet-app.crn"/>
       <arg value="lib/portlets/${artifactId}.war"/>
       <arg value="${tomcat.home}/webapps"/>
     </java>
   </target>

   <target name="uportal-load-db">
    <echo>uPortal initialize db</echo>
    <property name="droptables" value="${uportal.db.droptables.arg}"/>
    <echo>Running DbLoader with droptables option: #${uportal.db.droptables.arg}#</echo>
    <java fork="true" failonerror="true" dir="${basedir}" classname="org.jasig.portal.tools.dbloader.DbLoader">
      <classpath>
        <pathelement path="${work.dir}/uportal-properties"/>
        <fileset refId="uportal-jar.fileset"/>
        <path refId="uportal.classpath"/>
        <path refId="db.classpath"/>
      </classpath>

      <arg value="${droptables}"/>
    </java>
   </target>

   <target name="uportal-dbloader-tables">
       <artifact:dependencies fileSetId="data.loader.file">
           <dependency groupId="${groupId}" artifactId="${artifactId}"
                       version="${version}" type="jar"/>
           <remoteRepository refid="toro.repository" />
       </artifact:dependencies>
       <unjar dest="${work.dir}/uportal-properties/properties/db">
           <fileset refId="data.loader.file"/>
           <patternset>
               <include name="**/dbloader-*.xml"/>
           </patternset>
       </unjar>
       <mkdir dir="${work.dir}/uportal-properties/org/jasig/portal/tools/dbloader"/>
       <echo>Copying ${basedir}/properties/toro_${db.platform}_schema.xsl to ${work.dir}/uportal-properties/org/jasig/portal/tools/dbloader/tables.xsl</echo>
       <copy tofile="${work.dir}/uportal-properties/org/jasig/portal/tools/dbloader/tables.xsl" overwrite="true"
           file="${basedir}/properties/toro_${db.platform}_schema.xsl"/>
       <property name="tables.xml" value="/properties/db/tables.xml"/>
       <java fork="true" failonerror="true" dir="${basedir}" classname="org.jasig.portal.tools.dbloader.DbLoader">
           <classpath>
               <pathelement path="${work.dir}/uportal-properties"/>
               <fileset refId="uportal-jar.fileset"/>
               <path refId="uportal.classpath"/>
               <path refId="db.classpath"/>
           </classpath>

           <arg line="${uportal.db.droptables.arg} -C -nP -t /properties/db/dbloader-tables.xml"/>
       </java>
       <delete>
           <fileset dir="${work.dir}/uportal-properties/properties/db">
               <patternset>
                   <include name="**/dbloader-*.xml"/>
               </patternset>
           </fileset>
       </delete>
   </target>

   <target name="uportal-dbloader-data">
       <artifact:dependencies fileSetId="data.loader.file">
           <dependency groupId="${groupId}" artifactId="${artifactId}"
                       version="${version}" type="jar"/>
           <remoteRepository refid="toro.repository" />
       </artifact:dependencies>
       <unjar dest="${work.dir}/uportal-properties/properties/db">
           <fileset refId="data.loader.file"/>
           <patternset>
               <include name="**/dbloader-*.xml"/>
           </patternset>
       </unjar>
       <property name="tables.xml" value="/properties/db/tables.xml"/>
       <property name="data.xml" value="/properties/db/dbloader-data.xml"/>
       <java fork="true" failonerror="true" dir="${basedir}" classname="org.jasig.portal.tools.dbloader.DbLoader">
           <classpath>
               <pathelement path="${work.dir}/uportal-properties"/>
               <fileset refId="uportal-jar.fileset"/>
               <path refId="uportal.classpath"/>
               <path refId="db.classpath"/>
           </classpath>

           <arg line="-nD -nC -P -t ${tables.xml} -d ${data.xml}"/>
       </java>
   </target>
    <!-- End uPortal Targets -->
</project>
