<!--
  Copyright (C) 2007 Unicon, Inc.

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this distribution.  It is also available here:
  http://www.fsf.org/licensing/licenses/gpl.html

  As a special exception to the terms and conditions of version 
  2 of the GPL, you may redistribute this Program in connection 
  with Free/Libre and Open Source Software ("FLOSS") applications 
  as described in the GPL FLOSS exception.  You should have received
  a copy of the text describing the FLOSS exception along with this
  distribution.
-->

<!-- Assumes a task named copyWithAllPropertiesFilter has been defined. See build_antinstall.xml -->

<project name="toro-common" default="driver" basedir="${basedir}"
    xmlns:artifact="urn:maven-artifact-ant">

    <property file="build.properties"/>
    <property file="ant.install.properties"/>
    <property name="tomcat.home" value="[SET IN BUILD.PROPERTIES!]" />
    <property name="portal.webapp.home" value="[SET IN BUILD.PROPERTIES!]" />
    <property name="work.dir" value="${basedir}/work"/>
    <property name="minJavaVersion" value="1.5"/>

    <property name="webapp.home" value="${tomcat.home}/webapps" />

    <artifact:dependencies pathId="ant-contrib.pathId">
        <dependency groupId="ant-contrib" artifactId="ant-contrib"
            version="${ant-contrib.version}" type="jar"/>
        <remoteRepository refid="toro.repository" />
    </artifact:dependencies>
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath refId="ant-contrib.pathId"/>
    </taskdef>

    <property environment="env"/>

    <condition property="postgres.platform" value="true">
        <contains string="${jdbc.driver}" substring="postgres"/>
    </condition>
    <condition property="oracle.platform" value="true">
        <contains string="${jdbc.driver}" substring="oracle"/>
    </condition>
    <condition property="sqlserver.platform" value="true">
        <or>
            <contains string="${jdbc.driver}" substring="jtds"/>
            <contains string="${jdbc.driver}" substring="jnetdirect"/>
        </or>
    </condition>
    <condition property="mysql.platform" value="true">
        <contains string="${jdbc.driver}" substring="mysql"/>
    </condition>

    <target name="set-resource-tokens">
        <if>
            <equals arg1="${multibox.configuration}" arg2="true"/>
            <then>
                <property name="multibox.comment" value=""/>
                <property name="dirty.cache.request.handler" value="net.unicon.portal.cache.jms.JMSDirtyCacheRequestHandlerImpl"/>
            </then>
            <else>
                <property name="multibox.comment" value="!--"/>
                <property name="dirty.cache.request.handler" value="net.unicon.portal.cache.SBDirtyCacheRequestHandlerImpl"/>
            </else>
        </if>
        <if>
            <equals arg1="${ldap.checkbox}" arg2="true"/>
            <then>
                <property name="ldap.comment" value=""/>
                <if>
                    <equals arg1="${ldap.protocol.checkbox}" arg2="true"/>
                    <then>
                        <property name="ldap.protocol" value="ssl"/>
                        <property name="ldap.protocol.prefix" value="ldaps"/>
                    </then>
                    <else>
                        <property name="ldap.protocol" value=""/>
                        <property name="ldap.protocol.prefix" value="ldap"/>
                    </else>
                </if>
            </then>
            <else>
                <property name="ldap.comment" value="!--"/>
            </else>
        </if>
        <if>
            <and>
                <equals arg1="${ldap2.checkbox}" arg2="true"/>
            </and>
            <then>
                <property name="ldap2.comment" value=""/>
                <if>
                    <equals arg1="${ldap2.protocol.checkbox}" arg2="true"/>
                    <then>
                        <property name="ldap2.protocol" value="ssl"/>
                        <property name="ldap2.protocol.prefix" value="ldaps"/>
                    </then>
                    <else>
                        <property name="ldap2.protocol" value=""/>
                        <property name="ldap2.protocol.prefix" value="ldap"/>
                    </else>
                </if>
            </then>
            <else>
                <if>
                    <equals arg1="${ldap.checkbox}" arg2="true"/>
                    <then>
                        <property name="ldap2.comment" value="!--"/>
                    </then>
                    <else>
                        <property name="ldap2.comment" value=""/>
                    </else>
                </if>
            </else>
        </if>
        <if>
            <and>
                <equals arg1="${ldap3.checkbox}" arg2="true"/>
            </and>
            <then>
                <property name="ldap3.comment" value=""/>
                <if>
                    <equals arg1="${ldap3.protocol.checkbox}" arg2="true"/>
                    <then>
                        <property name="ldap3.protocol" value="ssl"/>
                        <property name="ldap3.protocol.prefix" value="ldaps"/>
                    </then>
                    <else>
                        <property name="ldap3.protocol" value=""/>
                        <property name="ldap3.protocol.prefix" value="ldap"/>
                    </else>
                </if>
            </then>
            <else>
                <if>
                    <equals arg1="${ldap.checkbox}" arg2="true"/>
                    <then>
                        <property name="ldap3.comment" value="!--"/>
                    </then>
                    <else>
                        <property name="ldap3.comment" value=""/>
                    </else>
                </if>
            </else>
        </if>
        <if>
            <and>
                <equals arg1="${ldap4.checkbox}" arg2="true"/>
            </and>
            <then>
                <property name="ldap4.comment" value=""/>
                <if>
                    <equals arg1="${ldap4.protocol.checkbox}" arg2="true"/>
                    <then>
                        <property name="ldap4.protocol" value="ssl"/>
                        <property name="ldap4.protocol.prefix" value="ldaps"/>
                    </then>
                    <else>
                        <property name="ldap4.protocol" value=""/>
                        <property name="ldap4.protocol.prefix" value="ldap"/>
                    </else>
                </if>
            </then>
            <else>
                <if>
                    <equals arg1="${ldap.checkbox}" arg2="true"/>
                    <then>
                        <property name="ldap4.comment" value="!--"/>
                    </then>
                    <else>
                        <property name="ldap4.comment" value=""/>
                    </else>
                </if>
            </else>
        </if>
        <property name="cms.enabled" value="${run.deploy.cms.channel}"/>
        <property name="maven.project.version" value="${maven.project.version}"/>
    </target>

    <target name="set-db-properties">
        <if>
            <isset property="postgres.platform"/>
            <then>
                <echo>Setting postgres specific properties...</echo>
                <property name="db.platform" value="postgres"/>
                <property name="jdbc.simplesql" value="select 1"/>
                <property name="db.time.impl" value="net.unicon.portal.util.PostgresTimeServiceImpl"/>
                <property name="db.sqlconcat" value="||"/>
                <property name="db.length" value="length"/>
                <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect"/>
            </then>
        </if>
        <if>
            <isset property="oracle.platform"/>
            <then>
                <echo>Setting oracle specific properties...</echo>
                <property name="db.platform" value="oracle"/>
                <property name="jdbc.simplesql" value="select 1 from dual"/>
                <property name="db.time.impl" value="net.unicon.portal.util.OracleTimeServiceImpl"/>
                <property name="db.sqlconcat" value="||"/>
                <property name="db.length" value="length"/>
                <property name="hibernate.dialect" value="org.hibernate.dialect.OracleDialect"/>
            </then>
        </if>
        <if>
            <isset property="sqlserver.platform"/>
            <then>
                <echo>Setting sqlserver specific properties...</echo>
                <property name="db.platform" value="sqlserver"/>
                <property name="jdbc.simplesql" value="select 1"/>
                <property name="db.time.impl" value="net.unicon.portal.util.SqlServerTimeServiceImpl"/>
                <property name="db.sqlconcat" value="+"/>
                <property name="db.length" value="datalength"/>
                <property name="hibernate.dialect" value="org.hibernate.dialect.SQLServerDialect"/>
            </then>
        </if>
        <if>
            <isset property="mysql.platform"/>
            <then>
                <echo>Setting mysql specific properties...</echo>
                <property name="db.platform" value="mysql"/>
                <property name="jdbc.simplesql" value="select 1"/>
                <property name="db.time.impl" value="net.unicon.portal.util.MySqlTimeServiceImpl"/>
                <property name="db.sqlconcat" value="||"/>
                <property name="db.length" value="length"/>
                <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect"/>
            </then>
        </if>
    </target>

    <target name="deploy-toro-war">
        <antcall target="deploy-war">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="${artifactId}"/>
            <param name="version" value="${maven.project.version}"/>
            <param name="webappName" value="${webappName}"/>
            <param name="maven.repo" value="toro.repository"/>
        </antcall>
    </target>

    <target name="deploy-war">
        <artifact:dependencies pathId="${artifactId}.war">
            <dependency groupId="${groupId}" artifactId="${artifactId}"
                version="${maven.project.version}" type="war"/>
            <remoteRepository refid="${maven.repo}" />
        </artifact:dependencies>
        <antcall target="deploy-filtered">
            <param name="groupId" value="${groupId}"/>
            <param name="artifactId" value="${artifactId}"/>
            <param name="version" value="${maven.project.version}"/>
            <param name="archive.type" value="war"/>
            <param name="dest" value="${webapp.home}/${webappName}"/>
            <param name="tmpdir" value="${work.dir}/${artifactId}-${maven.project.version}"/>
            <param name="webappName" value="${webappName}"/>
            <param name="remote.repository" value="toro.repository"/>
        </antcall>
    </target>

    <target name="deploy-filtered">
        <antcall target="extract-artifact">
          <param name="groupId" value="${groupId}"/>
          <param name="artifactId" value="${artifactId}"/>
          <param name="version" value="${version}"/>
          <param name="target.dir" value="${tmpdir}"/>
          <param name="archive.type" value="${archive.type}"/>
          <param name="remote.repository" value="${remote.repository}"/>
        </antcall>
        <copyWithAllPropertiesFilter todir="${dest}" filtering="on">
            <fileset dir="${tmpdir}">
                <include name="**/*.xml"/>
                <include name="**/*.properties"/>
            </fileset>
            <filterset>
                <filter token="webappName" value="${webappName}"/>
            </filterset>
        </copyWithAllPropertiesFilter>
        <copy todir="${dest}">
            <fileset dir="${tmpdir}">
                <exclude name="**/*.xml"/>
                <exclude name="**/*.properties"/>
            </fileset>
        </copy>
    </target>

    <target name="extract-artifact">
        <available property="artifact.exists" file="${artifact.path}"/>
        <condition property="ok.to.extract.artifact">
            <or>
                <contains string="${version}" substring="SNAPSHOT"/>
                <not><available file="${target.dir}/.artifact_extracted"/></not>
            </or>
        </condition>
        <antcall target="extract-artifact-task">
            <param name="groupId" value="${groupId}"/>
            <param name="artifactId" value="${artifactId}"/>
            <param name="version" value="${version}"/>
            <param name="target.dir" value="${target.dir}"/>
            <param name="archive.type" value="${archive.type}"/>
            <param name="remote.repository" value="${remote.repository}"/>
        </antcall>
        <touch file="${target.dir}/.artifact_extracted"/>
    </target>

    <target name="extract-artifact-task" if="ok.to.extract.artifact">
        <echo>Extracting maven artifact ${groupId}:${artifactId}:${version}:${archive.type} to ${target.dir}</echo>
        <artifact:dependencies filesetId="extract-artifact-task.filesetId">
            <dependency groupId="${groupId}" artifactId="${artifactId}"
                version="${version}" type="${archive.type}"/>
            <remoteRepository refid="${remote.repository}" />
            <!--include name="**/${artifactId}-${version}.${archive.type}"/-->
        </artifact:dependencies>
        <unjar dest="${target.dir}">
            <fileset refId="extract-artifact-task.filesetId"/>
        </unjar>
    </target>

    <target name="copy-local-resources-filtered">
        <copy overwrite="true" todir="${target.dir}">
            <fileset dir="${resources.dir}">
                 <patternset>
                     <include name="media/**"/>
                 </patternset>
             </fileset>
        </copy>
        <copyWithAllPropertiesFilter filtering="on" overwrite="true" todir="${target.dir}">
            <fileset dir="${resources.dir}">
                 <patternset>
                     <include name="*.jsp"/>
                     <include name="*.html"/>
                     <include name="*.html"/>
                     <include name="WEB-INF/**"/>
                     <include name="html/**"/>
                     <include name="templates/**"/>
                     <include name="wml/**"/>
                     <include name="javascript/**"/>
                 </patternset>
             </fileset>
        </copyWithAllPropertiesFilter>
    </target>

    <target name="merge-configuration">
        <artifact:dependencies pathId="configuration.classpath">
            <dependency groupId="net.unicon.toro" artifactId="toro-installer"
                version="${maven.project.version}" type="jar"/>
            <dependency groupId="net.unicon.toro" artifactId="alchemist"
                version="${maven.project.version}" type="jar"/>
            <dependency groupId="jaxen" artifactId="jaxen"
                version="${jaxen.version}" type="jar"/>
            <dependency groupId="dom4j" artifactId="dom4j"
                version="${dom4j.version}" type="jar"/>
            <remoteRepository refid="toro.repository" />
            <remoteRepository refid="central.repository" />
        </artifact:dependencies>
        <echo>MergeConfiguration configfile=${configfile} targetdir=${targetdir}</echo>
        <java failonerror="true" fork="true" dir="${basedir}" classname="net.unicon.toro.installer.tools.MergeConfiguration">
            <classpath refid="configuration.classpath"/>
            <classpath>
                <pathelement path="${work.dir}/uportal-properties"/>
                <pathelement path="${basedir}"/>
            </classpath>
            <arg value="${configfile}"/>
            <arg value="${targetdir}"/>
        </java>
    </target>

    <target name="deploy-portlet">
        <echo>Deploying maven artifact net.unicon.toro:${artifactId}:${maven.project.version}:war to ${webapp.home}/${webappName}</echo>
        <artifact:dependencies pathId="deployPortlet.classpath">
            <dependency groupId="net.unicon.toro" artifactId="${artifactId}" version="${maven.project.version}" type="war"/>
            <dependency groupId="net.unicon.toro" artifactId="portlets-common-lib" version="${maven.project.version}" type="jar"/>
            <dependency groupId="org.jasig.uportal" artifactId="uportal" version="${uportal.version}" type="jar"/>
            <dependency groupId="org.apache.pluto" artifactId="pluto" version="${pluto.version}" type="jar"/>
            <dependency groupId="commons-logging" artifactId="commons-logging" version="${commons-logging.version}" type="jar"/>
            <dependency groupId="portlet-api" artifactId="portlet-api" version="${portlet-api.version}" type="jar"/>
            <dependency groupId="xerces" artifactId="xercesImpl" version="${xercesImpl.version}" type="jar"/>
            <remoteRepository refid="toro.repository" />
            <remoteRepository refid="central.repository" />
        </artifact:dependencies>
        <delete dir="${webapp.home}/${webappName}"/>
        <delete dir="${work.dir}/${webappName}.war"/>
        <antcall target="copy-maven-artifact-to-file">
            <param name="groupId" value="net.unicon.toro"/>
            <param name="artifactId" value="${artifactId}"/>
            <param name="version" value="${maven.project.version}"/>
            <param name="archive.type" value="war"/>
            <param name="tofile" value="${work.dir}/${webappName}.war"/>
        </antcall>
        <echo message="war: ${work.dir}/${webappName}-${maven.project.version}.war"/>
        <java fork="true" failonerror="true" dir="${basedir}" classname="org.jasig.portal.container.deploy.Deployer">
            <classpath refid="deployPortlet.classpath" />
            <arg value="${work.dir}"/>
            <arg value="${work.dir}/${webappName}.war"/>
        </java>
        <artifact:dependencies filesetId="portlets-common-rendering.filesetId">
            <dependency groupId="net.unicon.toro" artifactId="portlets-common-lib"
                version="${maven.project.version}" type="jar"/>
            <remoteRepository refid="toro.repository" />
        </artifact:dependencies>
        <unjar dest="${work.dir}/${webappName}">
            <fileset refId="portlets-common-rendering.filesetId"/>
            <patternset>
                <include name="rendering/**"/>
            </patternset>
        </unjar>
        <copyWithAllPropertiesFilter todir="${webapp.home}/${webappName}" filtering="on">
            <fileset dir="${work.dir}/${webappName}">
                <include name="**/*.xml"/>
                <include name="**/*.properties"/>
            </fileset>
        </copyWithAllPropertiesFilter>
        <copy todir="${webapp.home}/${webappName}" filtering="off">
            <fileset dir="${work.dir}/${webappName}">
                <exclude name="**/*.xml"/>
                <exclude name="**/*.properties"/>
            </fileset>
        </copy>

        <property name="webContextBaseDir" value="."/>
        <copyWithAllPropertiesFilter tofile="${tomcat.host.conf}/${webappName}.xml" file="${webContextBaseDir}/properties/${webappName}.xml">
            <filterset>
                <filter token="webappName" value="${webappName}"/>
            </filterset>
        </copyWithAllPropertiesFilter>
    </target>

    <target name="copy-maven-artifact-to-file">
        <echo>Copying maven artifact ${groupId}:${artifactId}:${version}:${archive.type} to ${tofile}</echo>
        <artifact:dependencies filesetId="copy-maven-artifact.filesetId">
            <dependency groupId="${groupId}" artifactId="${artifactId}"
                version="${version}" type="${archive.type}"/>
            <remoteRepository refid="toro.repository" />
        </artifact:dependencies>
        <copy tofile="${tofile}">
            <fileset refId="copy-maven-artifact.filesetId"/>
        </copy>
    </target>

    <target name="merge-permissions-descriptor-for-briefcase" if="toro-briefcase-portlet.present">
        <echo>Merging permissions descriptor for briefcase</echo>
        <loadfile property="replaceValue" srcFile="${webapp.home}/toro-briefcase-portlet/WEB-INF/classes/config/permissions-portlet-fragment.xml"/>
        <replace file="${webapp.home}/toro-permissions-portlet/WEB-INF/classes/config/permissions-portlet.xml" token="briefcase-portlet-section-->" value="${replaceValue}"/>
    </target>

    <target name="merge-permissions-descriptor-for-messaging" if="toro-messaging-portlet.present">
        <echo>Merging permissions descriptor for messaging</echo>
        <loadfile property="replaceValue" srcFile="${webapp.home}/toro-messaging-portlet/WEB-INF/classes/config/permissions-portlet-fragment.xml"/>
        <replace file="${webapp.home}/toro-permissions-portlet/WEB-INF/classes/config/permissions-portlet.xml" token="messaging-portlet-section-->" value="${replaceValue}"/>
    </target>

    <target name="merge-permissions-descriptor-for-gateway" if="toro-gateway-portlet.present">
        <echo>Merging permissions descriptor for gateway</echo>
        <loadfile property="replaceValue" srcFile="${webapp.home}/toro-gateway-portlet/WEB-INF/classes/config/permissions-portlet-fragment.xml"/>
        <replace file="${webapp.home}/toro-permissions-portlet/WEB-INF/classes/config/permissions-portlet.xml" token="gateway-portlet-section-->" value="${replaceValue}"/>
    </target>

    <target name="merge-permissions-descriptor-for-web-content" if="toro-web-content-portlet.present">
        <echo>Merging permissions descriptor for web content</echo>
        <loadfile property="replaceValue" srcFile="${webapp.home}/toro-web-content-portlet/WEB-INF/classes/config/permissions-portlet-fragment.xml"/>
        <replace file="${webapp.home}/toro-permissions-portlet/WEB-INF/classes/config/permissions-portlet.xml" token="web-content-portlet-section-->" value="${replaceValue}"/>
    </target> 
</project>
