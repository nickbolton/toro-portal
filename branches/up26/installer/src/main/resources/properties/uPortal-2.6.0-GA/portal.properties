# portal.properties

# These properties can be retrieved like this in your java code:
#
# String propertyValue  = PropertiesManager.getProperty(propertyName);
# boolean propertyValue = PropertiesManager.getPropertyAsBoolean(propertyName);
# byte propertyValue    = PropertiesManager.getPropertyAsByte(propertyName);
# short propertyValue   = PropertiesManager.getPropertyAsShort(propertyName);
# int propertyValue     = PropertiesManager.getPropertyAsInt(propertyName);
# long propertyValue    = PropertiesManager.getPropertyAsLong(propertyName);
# float propertyValue   = PropertiesManager.getPropertyAsFloat(propertyName);
# double propertyValue  = PropertiesManager.getPropertyAsDouble(propertyName);
#
# Please keep the formatting of this properties file as follows:
#
#   # Comment line 1
#   # Comment line 2, etc
#   #                      <-- (leave a blank commented line)
#   property_name=property_value
#                          <-- (leave two blank
#                          <--  uncommented lines)


# SAX parser implementation for use with JAXP
#
org.xml.sax.driver=org.apache.xerces.parsers.SAXParser


# Controls whether or not StylesheetSet objects are cached.
# Setting this to "on" improves performance, but then changes to
# any stylesheet list files (.ssl) will not take effect until
# the portal has been restarted.
#
org.jasig.portal.utils.XSLT.stylesheet_set_caching=on


# Controls whether or not pre-compiled stylesheets should be cached.
# Setting this to "on" improves performance, but then changes to
# any stylesheet files (.xsl) will not take effect until
# the portal has been restarted.
#
org.jasig.portal.utils.XSLT.stylesheet_root_caching=on


# Controls whether URL content is cached
# When using CAR files, this option, along with the stylesheet root caching controls
# the caching of XSL files, since they are loaded from a jar URL
#
org.jasig.portal.PortalSessionManager.url_caching=on


# Controls caching for framework stylesheets
#
org.jasig.portal.UserInstance.cache_enabled=on


# Controls caching at the character level.  Note: Character
# caching can only be enabled for serializers that implement
# the org.jasig.portal.serialize.CachingSerializer interface.
# Character caching offers greatly improved performance.
#
org.jasig.portal.UserInstance.character_cache_enabled=on


# Min size of xslt cache.
#
org.jasig.portal.UserInstance.system_xslt_cache_min_size=5


# Min size of system character block cache
#
org.jasig.portal.UserInstance.system_character_block_cache_min_size=10


# If set to true, the XML resulting from the structure and/or theme
# transformations will be printed to the portal log file provided
# that the log level is set to DEBUG (see Logger.properties).
# You can then grab the XML and use it within an XSLT editor to
# work on theme and structure stylesheets.  Note that the XML before the
# theme transformation doesn't include channel markup which is inserted
# by the portal after the theme transformation.
#
org.jasig.portal.UserInstance.log_xml_before_structure_transformation=false
org.jasig.portal.UserInstance.log_xml_before_theme_transformation=false


# Decides whether or not to copy the character block into a new object.
# Set to 'no' unless your SAX parser is passing the same reference to
# successive calls of the SAX2BufferImpl.characters() method.  This behavior
# has been observed in Resin's SAX parser for example.
#
org.jasig.portal.utils.SAX2BufferImpl.copyCharBlock=yes


# Channel manager thread pool settings. For meaning of thread pool settings,
# see org.jasig.portal.utils.threading.BoundedThreadPool
# 
# WARNING: The default factory implementations use underlying thread pool implementation choices that
# *DO NOT HONOR _maxThreads*  With the default implementations, _maxThreads has *no effect*.  The pools
# will always have _initialThreads number of threads.
#
# Why, you ask, are these properties still here, if they're not doing anything in the default implementation?
# They are retained because you *can* replace these default factory impls with custom implementations, and those
# implementations might make use of these properties.
#
#
org.jasig.portal.ChannelManager.ChannelRendererFactory.className=org.jasig.portal.ChannelRendererFactoryImpl
org.jasig.portal.ChannelManager.threadPool_initialThreads=20
org.jasig.portal.ChannelManager.threadPool_maxThreads=150
org.jasig.portal.ChannelManager.threadPool_threadPriority=5
org.jasig.portal.ChannelManager.threadPool_shared=true

org.jasig.portal.StandaloneChannelRenderer.ChannelRendererFactory.className=org.jasig.portal.ChannelRendererFactoryImpl
org.jasig.portal.StandaloneChannelRenderer.threadPool_initialThreads=20
org.jasig.portal.StandaloneChannelRenderer.threadPool_maxThreads=150
org.jasig.portal.StandaloneChannelRenderer.threadPool_threadPriority=5
org.jasig.portal.StandaloneChannelRenderer.threadPool_shared=true

org.jasig.portal.wsrp.ChannelInstanceManager.ChannelRendererFactory.className=org.jasig.portal.ChannelRendererFactoryImpl
org.jasig.portal.wsrp.ChannelInstanceManager.threadPool_initialThreads=20
org.jasig.portal.wsrp.ChannelInstanceManager.threadPool_maxThreads=150
org.jasig.portal.wsrp.ChannelInstanceManager.threadPool_threadPriority=5
org.jasig.portal.wsrp.ChannelInstanceManager.threadPool_shared=true


# Controls thread pool for channel workers
#
org.jasig.portal.ChannelRenderer.pool_threads=on


# Controls whether or not channel output should be cached.
# Channel output is cached at the SAX event level unless
# character caching is possible and enabled.
#
org.jasig.portal.ChannelRenderer.cache_channels=on


# This is the default cache timeout value (in seconds) for all channels
# of type org.jasig.portal.channels.CGenericXSLT that do not specify
# their own cache timeout value. This default value is overridden by
# any CGenericXSLT channel that has a static parameter called "cacheTimeout"
#
org.jasig.portal.channels.CGenericXSLT.default_cache_timeout=900


# This is the default cache timeout value (in seconds) for all channels
# of type org.jasig.portal.channels.webproxy.CWebProxy that do not specify
# their own cache timeout value. This default value is overridden by
# any CWebProxy channel that has a static parameter called
# "cw_cacheDefaultTimeout"
#
org.jasig.portal.channels.webproxy.CWebProxy.cache_default_timeout=900


# This is the default cache mode for all channels of type
# org.jasig.portal.channels.webproxy.CWebProxy that do not specify
# their own cache scope. This default value is overridden by
# any CWebProxy channel that has a static parameter called
# "cw_cacheDefaultMode"
#
org.jasig.portal.channels.webproxy.CWebProxy.cache_default_mode=none


# This is the default value for the cw_personAllow static data parameter
# for channels of type org.jasig.portal.channels.webproxy.CWebProxy.
# An empty value or "!*" means no attributes may be passed. "*" means
# allw attributes may be passed.
#
org.jasig.portal.channels.webproxy.CWebProxy.person_allow=


# This is the default cache timeout value (in seconds) for the channel
# registry, a list of channels that one can subscribe to.
#
org.jasig.portal.ChannelRegistryManager.channel_registry_cache_timeout=900


# This is the default cache timeout value (in seconds) for the channel
# types, a list of java class / .cpd file combinations that one can publish.
#
org.jasig.portal.ChannelRegistryManager.channel_types_cache_timeout=900


# This is the default cache timeout value (in seconds) for the channel
# publishing documents (CPD).
#
org.jasig.portal.ChannelRegistryManager.cpd_cache_timeout=900


# Controls whether or not document type declaration should be included
# in serialized output of HTML and XHTML documents.
# Setting this to "no" will allow the appropriate document type
# declaration to appear in the document,
# e.g. <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/WD-html-in-xml/DTD/xhtml1-strict.dtd">
# Beware that some browsers such as Netscape have trouble rendering pages whose
# markup includes a document type.  If you change this setting to "no", you should
# do some testing to make sure that the portal renders correctly in the browsers you
# choose to support.
#
org.jasig.portal.MediaManager.omit_doctype=no


# Controls whether or not serializer output should be indented.
# Setting this to "on" produces indented markup (HTML, XHTML, etc).
# It may be helpful during development to set this to "on", improving
# the readability of the source markup.  However, the identing can
# greatly increase the size of a page, so during production this should
# be set to "off".
#
org.jasig.portal.MediaManager.output_indenting=off


# Controls whether or not to allow the disabling of output escaping.
# If set to "yes", then it will be possible to include unescaped markup
# within an XML element.  For example, you could include HTML tags within
# the description of an RSS description element like this:
# <description><b>This is an important description</b></description>
# Note that this makes it possible for markup that is not well-formed
# to end up in the final document.
#
org.jasig.portal.serialize.BaseMarkupSerializer.allow_disable_output_escaping=no


# Controls the behavior of Authentication Service regarding the automatic creation of
# portal user data for a user who has authenticated.  true indicates that the
# data should be automatically created.  [The class to implement the creation,
# IUserIdentityStore, is specified in the RDBM properties file.]
#
org.jasig.portal.services.Authentication.autoCreateUsers=true


# Controls the default user to use as a template for new users.
#
org.jasig.portal.services.Authentication.defaultTemplateUserName=demo


# If this is set to true then the PersonDirectory service will be used to populate users
#
org.jasig.portal.services.Authentication.usePersonDirectory=true


# Class name of the concrete IPersonManager implementation to be used
#
org.jasig.portal.security.PersonManagerFactory.implementation=org.jasig.portal.security.provider.SimplePersonManager


# Controls the user that represents a "Guest" user in the portal.
# Users are considered guests when they have this user name and
# they are have not authenticated with the portal.
# Tip: Make sure the value of this property is not a real user name
# within your organization.
#
org.jasig.portal.security.PersonFactory.guest_user_name=guest


# Tells the ChainingSecurityContext whether or not to stop trying to authenticate a user
# once they have successfully passed authentication
#
org.jasig.portal.security.provider.ChainingSecurityContext.stopWhenAuthenticated=true


# Maximum file size we are willing to accept on a file upload
#
org.jasig.portal.RequestParamWrapper.file_upload_max_size=3000000


# Controls features that prevent repeated requests from going through.
# Set this to "yes" when load testing, debugging, or typing things
# in on a command line.
# This value should normally be set to "no".
#
org.jasig.portal.PortalSessionManager.allow_repeated_requests=no


# Determines whether or not to obtain connections from a javax.sql.DataSource
# that has been bound in the container's JNDI context.  This is the J2EE-preferred
# way of obtaining connections.  If set to false or if the location of the DataSource
# in JNDI fails, the portal will produce connections from java.sql.DriverManager and
# the JDBC properties set in rdbm.properties.
#
# By default, uPortal will look in JNDI under the context java:comp/env/jdbc/DBNAME
# for the DataSource, where DBNAME is the name you pass to the getConnection() or
# getDataSource() method in RDBMServices.  For the default core uPortal database,
# the value for DBNAME is given by the value of the portal.properties property
# org.jasig.portal.RDBMServices.PortalDatasourceJndiName.
# See the context file uPortal.xml for an example of configuring such a DataSource
# in Tomcat.
#
org.jasig.portal.RDBMServices.getDatasourceFromJndi=true

# Specifies the number of milliseconds to wait after a failed JNDI lookup before
# attempting to lookup the DataSource again. This does not cause blocking but will
# simply cause an immediate fail of the lookup for the duration of the specified
# delay
#
org.jasig.portal.RDBMServices.jndiRetryDelay=60000

# Specifies the JNDI base context and names of the configured portal and person databases. The
# names are used when org.jasig.portal.RDBMServices.getDatasourceFromJndi is
# true to lookup the default portal databases.
#
org.jasig.portal.RDBMServices.PortalDatasourceJndiName=PortalDb
org.jasig.portal.RDBMServices.baseJndiContext=java:comp/env/jdbc


# Implementations of persistant store interfaces
#
org.jasig.portal.ChannelRegistryStoreFactory.implementation=org.jasig.portal.RDBMChannelRegistryStore
#
# For UserLayoutStoreFactory:
# Change between the following three to convert between ALM, DLM, and SLM.
#
# --- ALM Value: org.jasig.portal.layout.alm.AggregatedUserLayoutStore (v2.2+)
# --- DLM Value: org.jasig.portal.layout.dlm.RDBMDistributedLayoutStore (v2.5+)
# --- SLM Value: org.jasig.portal.layout.simple.RDBMUserLayoutStore
#
org.jasig.portal.layout.UserLayoutStoreFactory.implementation=org.jasig.portal.layout.dlm.RDBMDistributedLayoutStore
org.jasig.portal.UserIdentityStoreFactory.implementation=org.jasig.portal.RDBMUserIdentityStore
org.jasig.portal.utils.CounterStoreFactory.implementation=org.jasig.portal.utils.RDBMCounterStore
org.jasig.portal.groups.EntityGroupFactory.implementation=org.jasig.portal.groups.RDBMEntityGroupStore
org.jasig.portal.i18n.LocaleStoreFactory.implementation=org.jasig.portal.i18n.RDBMLocaleStore
org.jasig.portal.PortletPreferencesStoreFactory.implementation=org.jasig.portal.RDBMPortletPreferencesStore
org.jasig.portal.PooledDataSourceFactory.implementation=org.jasig.portal.rdbm.pool.DBCPDataSourceFactory


# Factory for Sequence ID (OID) Generator
#
org.jasig.portal.SequenceGeneratorFactory.implementation=org.jasig.portal.ReferenceSequenceGeneratorFactory


# IGroupServiceFactory used by the GroupService
#
org.jasig.portal.groups.GroupServiceFactory=org.jasig.portal.groups.ReferenceGroupServiceFactory


# Specifies whether or not groups should be cached.
# Only turn this off for debugging.
#
org.jasig.portal.groups.IEntityGroupService.useCache=true


# Key for IEntityGroup representing everyone (all portal users).
#
org.jasig.portal.services.GroupService.key_org.jasig.portal.security.IPerson=local.0


# Key for IEntityGroup representing all channel categories.
#
org.jasig.portal.services.GroupService.key_org.jasig.portal.ChannelDefinition=local.50


# Key for IEntityGroup representing portal system administrators (those with superuser privileges)
#
org.jasig.portal.services.GroupService.key_org.jasig.portal.security.IPerson.PortalAdministrators=local.14


# Retrieval limits for Groups Manager.
# Limit the number of group members that should be enumerated when the Groups Manager generates
# an XML representation of the groups hierarchy
#
org.jasig.portal.channels.groupsmanager.wrappers.GroupWrapper.limitRetrievals=false
org.jasig.portal.channels.groupsmanager.wrappers.GroupWrapper.retrievalLimit=25


# Name Finder Factories:
#
org.jasig.portal.services.EntityNameFinderService.NameFinderFactory.implementation_org.jasig.portal.security.IPerson=org.jasig.portal.groups.PersonDirNameFinderFactory
org.jasig.portal.services.EntityNameFinderService.NameFinderFactory.implementation_org.jasig.portal.groups.IEntityGroup=org.jasig.portal.groups.EntityGroupNameFinderFactory
org.jasig.portal.services.EntityNameFinderService.NameFinderFactory.implementation_org.jasig.portal.ChannelDefinition=org.jasig.portal.groups.ReferenceChannelNameFinderFactory


# Profile management settings:
#
org.jasig.portal.channels.UserPreferences.ManageProfilesState.allowUserProfiles=true
org.jasig.portal.channels.UserPreferences.ManageProfilesState.allowSystemProfileBrowserMapping=true
org.jasig.portal.channels.UserPreferences.ManageProfilesState.allowNewProfileCreation=true


# Specifies if browser to profile mappings guessed by matching
# regular expressions in browser.properties should be persisted
# in the database.
#
org.jasig.portal.GuestUserPreferencesManager.save_profile_guesses=true


# Core IUserLayoutManager implementation.
# Change between the following three to convert between ALM, DLM, and SLM.
#
# --- ALM Value: org.jasig.portal.layout.alm.AggregatedLayoutManager
# --- DLM Value: org.jasig.portal.layout.dlm.DistributedLayoutManager
# --- SLM Value: org.jasig.portal.layout.simple.SimpleUserLayoutManager
#
org.jasig.portal.layout.UserLayoutManagerFactory.coreImplementation=org.jasig.portal.layout.dlm.DistributedLayoutManager

# IRestrictionManager implementation. Checks different types of restrictions on the user layout nodes.
# Aggregated layouts restriction manager is used by default.
#
org.jasig.portal.layout.restrictions.IRestrictionManager.implementation=org.jasig.portal.layout.restrictions.alm.ALRestrictionManager


# Authorization Service settings:
#
#   * IPermissionStore.implementation is the permission store.
#   * IPermissionPolicy.defaultImplementation is the permission policy used when not overridden at
#     runtime (see IAuthorizationPrincipal.hasPermission()).
#   * IAuthorizationService.cachePermissions sets if permissions will be cached by the
#     entity caching service.  (Default=true).
#
org.jasig.portal.security.IPermissionStore.implementation=org.jasig.portal.security.provider.RDBMPermissionImpl
org.jasig.portal.security.IPermissionPolicy.defaultImplementation=org.jasig.portal.security.provider.AnyUnblockedGrantPermissionPolicy
org.jasig.portal.security.IAuthorizationService.cachePermissions=true


# Concurrency Services settings:
#
#  multiServer (true/false) indicates if the portal will run in multiple jvms.
#
#  clockTolerance (in milliseconds) sets a fudge factor to account for system clocks
#  on different hosts.  Only used when org.jasig.portal.concurrency.multiServer=true.
#
#  Defaults:  multiServer=false
#             clockTolerance=5000
#
org.jasig.portal.concurrency.multiServer=@multibox.configuration@
org.jasig.portal.concurrency.clockTolerance=5000


# Entity Lock Service settings:
#
#  * defaultLockDuration sets the default lock duration in seconds.  Locks can also be
#    requested for specific durations.
#
# Defaults: defaultLockDuration=300
#
org.jasig.portal.concurrency.IEntityLockServiceFactory=org.jasig.portal.concurrency.locking.ReferenceEntityLockServiceFactory
org.jasig.portal.concurrency.IEntityLockService.defaultLockDuration=300


# Entity Caching Service settings:
#
#  * defaultMaxCacheSize - the default value for maximum number of entries in a cache.
#  * defaultSweepInterval - the default value in seconds for the interval between cache sweeps.
#  * defaultMaxIdleTime - the default value in seconds for the time after which a cache
#    entry may be purged if it has not been accessed.
#
# These defaults can be overridden for individual entity caches with entries of the form:
# <entity-service>.<entity-type>.<attribute>=<value>.
# For example,
# org.jasig.portal.concurrency.IEntityCachingService.org.jasig.portal.security.IPerson.maxCacheSize=1000
# org.jasig.portal.concurrency.IEntityCachingService.org.jasig.portal.security.IPerson.sweepInterval=60
# org.jasig.portal.concurrency.IEntityCachingService.org.jasig.portal.security.IPerson.maxIdleTime=1800
#
# Note that if org.jasig.portal.concurrency.multiServer is true, the cache will
# create and consume cache invalidations to synchronize with peer caches.
#
org.jasig.portal.concurrency.IEntityCachingServiceFactory=org.jasig.portal.concurrency.caching.ReferenceEntityCachingServiceFactory
org.jasig.portal.concurrency.IEntityCachingService.defaultMaxCacheSize=1000
org.jasig.portal.concurrency.IEntityCachingService.defaultSweepInterval=60
org.jasig.portal.concurrency.IEntityCachingService.defaultMaxIdleTime=1800

# Protocol handler for https connections.  Set by default to the one provided with
# Sun's JSSE - change to use your local JSSE implementation
#
org.jasig.portal.utils.ResourceLoader.HttpsHandler=com.sun.net.ssl.internal.www.protocol


# The flag to determine wether UserPreferences should be saved at the end of each session
#
org.jasig.portal.UserPreferencesManager.save_UserPreferences_at_logout=false


# IPortalDocument implementation
#
org.jasig.portal.utils.IPortalDocument.implementation=org.jasig.portal.utils.PortalDocumentImpl


# IDOMInitService implementation. Use in conjuction with the dom
# implementation configured with jaxp/trax api.
#
org.jasig.portal.services.dom.DOMInitServiceFactory.implementation=


# Locales supported by this portal installation. Locales should be
# specified using a comma-separated list.  Each locale should be
# represented by two letter country code, per ISO-639, and a
# two letter language code, per ISO-3166, separated by an
# underscore character.
#
org.jasig.portal.i18n.LocaleManager.locale_aware=true
org.jasig.portal.i18n.LocaleManager.portal_locales=en_US,ja_JP,sv_SE,de_DE


# Controls the source attribute proxy rewrite for  image, applet and
# input elements.  The rewrite can only be enabled for
# org.jasig.portal.serialize.HTMLMarkupSerializer.
# The proxy rewrite prefix will be substituted for the "http://" portion
# of the url in the src attribute of the rewritable elements listed above.
#
# Proxy rewriting is used to avoid mixed content when running the portal
# over ssl.
#
org.jasig.portal.serialize.ProxyWriter.resource_proxy_enabled=off


# In case apache is sitting in front,the proxy directive in httpd.conf
# allows using /proxy/ prefix instead of ProxyServlet. The httpd.conf should include
# something like "ProxyPass /proxy/ http://" within each virtual host element that allows
# proxy rewrite.
#
# WARNING: Configuring Apache to operate as a proxy ushers in a host of security concerns and cross-site-scripting vulnerability 
# potential.  You can via this property instruct uPortal to use an abitrary externally hosted proxy technology, including Apache.  
# Use this feature with care and caution if at all.
#
# Example settings:
# /servlet/ProxyServlet/   (uses proxy servlet included with uPortal)
# /proxy/                  (uses proxy which must be configured in Apache)
#
org.jasig.portal.serialize.ProxyWriter.resource_proxy_rewrite_prefix=/servlet/ProxyServlet/


# HttpProxyServlet will check referer to discourage proxied content from being 
# requested by pages other than real uPortal pages.  To enable, set referer to the the base url for your
# portal when using ssl. For example:
# org.jasig.portal.HttpProxyServlet.checkReferer=https://portal.yourschool.edu
#
# Note that referrer is a header set by the client, so while using this feature does discourage the Adversary
# from using the proxy from pages not rendered by uPortal, it does not guarantee that the request actually originates 
# from the rendering of such a page.
#
org.jasig.portal.HttpProxyServlet.checkReferer=


# In some channels the content of the channel is an include javascript
# file. The ProxyWriter rewrites the javascript file to a location on
# virtual host on the same server as the portal and proxies all the
# http referenced image tags in the file. Then the channel uses the local
# file to read its content. This test is skipped if the URL domain is considerd to be
# local (no_redirect_domain).
# org.jasig.portal.serialize.ProxyWriter.proxy_files_uri=http://portal.yourschool.edu/
# org.jasig.portal.serialize.ProxyWriter.proxy_files_path=../work/_/
# org.jasig.portal.serialize.ProxyWriter.no_redirect_domain=yourschool.edu
#
org.jasig.portal.serialize.ProxyWriter.proxy_files_uri=
org.jasig.portal.serialize.ProxyWriter.proxy_files_path=
org.jasig.portal.serialize.ProxyWriter.no_redirect_domain=http://localhost:8080


# The number of recent PortalExceptions ProblemsTable should cache
# for each Specific (Error subcategory).
#
org.jasig.portal.ProblemsTable.maxRecentErrorsPerSpecific=10


# The number of recent PortalExceptions the ProblemsTable should cache
# in its overall FIFO cache of recent PortalExceptions.
#
org.jasig.portal.ProblemsTable.recentErrorsOverall=40


# Whether or not to add anchors to URLs created by channels.
# If set to true, these anchors will cause the browser to
# jump down to the title of the channel when a user clicks on
# a link within the channel.  The anchor ID is the same as the
# channel subscription ID.
#
org.jasig.portal.ChannelManager.use_anchors=true


# Determines the default content handler class to use to process the channel-definition
# elements in channel archive deployment descriptors if any. If this property is not
# defined then a default internal content handler is used. If special handling is needed
# for publishing channels in CARs then uncomment this property and specify the class
# that should receive the channel-definition block and contents.
#
#org.jasig.portal.car.ChannelDefinition.contentHandler=org.jasig.portal.car.DefaultChanPubInnerHandler

# Uniquely identifies the the Pluto portlet container instance to be used for this uPortal instance.
# This property allows you to run more than one copy of uPortal in the same Tomcat environment using different
# portlet containers within Pluto.
#
org.jasig.portal.channels.portlet.CPortletAdapter.uniqueContainerName=Pluto-in-uPortal

# Defines the internal implementation of the Channel Admin channel which is the
# channel that is focused when the user selects the Channel Admin link. The
# default provided creates a flat list of links that a user has permission to
# access. An implementation must implement IChannel, ICacheable,
# and INavigationModel.
#
org.jasig.portal.channels.adminnav.AdminNavigation.implementation=org.jasig.portal.channels.adminnav.provider.ListModel


#
# Pool size for http connections
#
org.jasig.portal.services.HttpClientManager.poolSize=20

#
# The default maximum number of connections allowed per host
#
org.jasig.portal.services.HttpClientManager.hostConnections=2

#
# Connection timeout in milliseconds
#
org.jasig.portal.services.HttpClientManager.connectionTimeout=5000

# Tunable unauthenticated user session timeout in seconds.
# To use the default webapp session timeout, set to zero
# To specify infinite timeout, set to -1
org.jasig.portal.PortalSessionManager.unauthenticatedUserSessionTimeout=0
