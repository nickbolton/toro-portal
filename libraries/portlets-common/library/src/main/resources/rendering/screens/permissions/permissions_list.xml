<?xml version="1.0" ?>
<!--
  Copyright (C) 2007 Unicon, Inc.

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this distribution.  It is also available here:
  http://www.fsf.org/licensing/licenses/gpl.html

  As a special exception to the terms and conditions of version 
  2 of the GPL, you may redistribute this Program in connection 
  with Free/Libre and Open Source Software ("FLOSS") applications 
  as described in the GPL FLOSS exception.  You should have received
  a copy of the text describing the FLOSS exception along with this
  distribution.
-->
<!--
<state>
	<status>
		<error type="other">
			<problem>A group has been renamed or deleted</problem>
			<solution>Review the list of groups to make sure all groups have the desired permissions.</solution>
		</error>
	</status>

    <navigation>
        <portlet id="123">
            <label>Messaging Portlet</label>
            <description>The Messaging Portlet allows the reading, composing, importing, and exporting messages.</description>
        </portlet>
    </navigation>
    
    <current>
        <portlet id="123">
            <label>Messaging Portlet</label>
            <description>The Messaging Portlet allows the reading, composing, importing, and exporting messages.</description>
        </portlet>
    </current>

    <privileged currentpage="5" perpage="5" totalpages="5" firstdisplayed="6" lastdisplayed="10" totalitems="27">
        <member id="1"><name>Howdy Dudey</name></member>
        <group id="2"><name>Mouseketeers</name></group>
        <member id="11"><name>John Doe</name></member>
    </privileged>
    
    <permissions>
        <permission handle="Compose">
            <label>Compose Message</label>
            <description>This privilege allows the composing and sending of new messages.</description>
        </permission>
        <permission handle="Import">
            <label>Import Messages</label>
            <description>This privilege allows the importing and sending of new messages.</description>
        </permission>
        <permission handle="ViewAll">
            <label>View All Active Notifications</label>
            <description>This privilege allows the viewing of all active messages in the system (regardless of the recipients selected).</description>
        </permission>
        <permission handle="DeleteAny">
            <label>Delete Any Active Notifications</label>
            <description>This privileged allows the deletion of any active messages in the system (regardless of the recipients selected).  This will remove the message from the folders of all recipients.</description>
        </permission>
    </permissions>

</state>

-->
<screen handle="permissions_list">
   <layout>
   	  <layout-context class="PermissionsPortlet PermissionsPortlet_permissions_list" />
<!-- DEBUG to show state XML -->
<!--<form>
        <textarea>
            <copy-of select = "/state"/>
        </textarea>
        </form> -->
      <section type="header">
         <hbox width="100%">
            <call-template handle="nowViewing" select="/state">
            </call-template>

<!--<div style="text-align:right;" nowrap="nowrap">
               <call-template handle="BasicSearch" select="/state">
               </call-template>
            </div> -->
         </hbox>
      </section>

      <section type="content">
         <section type="main" cols="2" class="main-content padding">
            <choice-collection handle="editPermissionForm">
               <hidden-input> <!-- Hack to fix the no choices in choice-collection problem. -->
                  <choice handle="ignoreMe" min-selections="0" max-selections="0">
                      <option handle="meToo" complement-type="net.unicon.penelope.complement.TypeNone">
                      </option>
                  </choice>
               </hidden-input>

<!-- SUCCESS MESSAGE -->
               <call-template handle="messages" select="/state/status/message">
               </call-template>

<!-- ERROR MESSAGE -->
               <call-template handle="errors" select="/state/status/error">
               </call-template>

<!-- PAGE TOOLBAR -->
               <!--<call-template handle="pageToolbar" select="." /> -->

<!-- MAIN BODY NON-EMPTY -->
               <call-template handle="MainBody" select="self::node()[count(/state/privileged/member) + count(/state/privileged/group) &gt; 0]">
               </call-template>

<!-- MAIN BODY EMPTY -->
               <call-template handle="MainBodyEmpty" select="self::node()[not(count(/state/privileged/member) + count(/state/privileged/group) &gt; 0)]">
               </call-template>

<!-- PAGE TOOLBAR -->
               <call-template handle="pageToolbar" select="." />
            </choice-collection>
         </section>
      </section>
   </layout>

   <template handle="nowViewing">
      <h2>Permissions / 
      <value-of select="/state/current/portlet/label">
      </value-of>

<!--<call-template handle="SearchTitle" select="/state/search">
      </call-template> -->
      </h2>
   </template>

   <template handle="MainBody">
      <!--<call-template handle="permissionsToolbar" select="." /> -->

      <call-template handle="listFilters" select="." />

      <table even-row-class="portlet-section-body evenrow" odd-row-class="portlet-section-alternate oddrow" cellpadding="0" cellspacing="0" border="0" class="main-content-table">
         <col>
            <th class="portlet-section-header th-button th-button-select">
               <select-toggle targetname="selectedItems" title="To select or de-select all members and groups on this page">Select</select-toggle>
            </th>

            <choice handle="selectedItems" min-selections="0" max-selections="0">
               <call-template handle="rowSelect" select="/state/privileged/*[name(.)='member' or name(.)='group']" />
            </choice>
         </col>

         <col>
            <th class="portlet-section-header th-button th-button-name">
               <sort-column>
                  <choice handle="nameSortDirection" min-selections="0" max-selections="1">
                     <label>Name Sort Direction</label>

                     <option handle="asc" complement-type="net.unicon.penelope.complement.TypeNone">
                        <label>Sort Names in ascending order</label>
                     </option>

                     <option handle="des" complement-type="net.unicon.penelope.complement.TypeNone">
                        <label>Sort Names in descending order</label>
                     </option>
                  </choice>

                  <action handle="permissionsSortName" impl="net.unicon.academus.apps.permissions.engine.ChangePermissionsSortAction" inpt="editPermissionForm">
                     <label>Name</label>
                  </action>
               </sort-column>
            </th>

            <call-template handle="rowName" select="/state/privileged/*[name(.)='member' or name(.)='group']" />
         </col>

         <call-template handle="colPermission" select="/state/permissions/permission" />
      </table>

      <paging>
         <display-per-page>
            <select-one type="dropdown" title="Select the number of items to display per page.">
               <choice handle="chooseDisplayNumber" min-selections="0" max-selections="1">
                  <label>Display</label>

                  <option handle="5" complement-type="net.unicon.penelope.complement.TypeNone">
                     <label>5</label>
                  </option>

                  <option handle="10" complement-type="net.unicon.penelope.complement.TypeNone">
                     <label>10</label>
                  </option>

                  <option handle="20" complement-type="net.unicon.penelope.complement.TypeNone">
                     <label>20</label>
                  </option>

                  <option handle="50" complement-type="net.unicon.penelope.complement.TypeNone">
                     <label>50</label>
                  </option>

                  <option handle="0" complement-type="net.unicon.penelope.complement.TypeNone">
                     <label>All</label>
                  </option>

                  <action handle="setDisplay" impl="net.unicon.academus.apps.permissions.engine.SetPermissionsItemsPerPageAction" inpt="editPermissionForm">
                     <label>Set</label>

                     <description>To set the number of displayed items, per page.</description>
                  </action>
               </choice>
            </select-one>

            <text>Per Page</text>
         </display-per-page>

         <paging-controls currentpage="{/state/privileged/@currentpage}" perpage="{/state/privileged/@perpage}" totalpages="{/state/privileged/@totalpages}" firstdisplayed="{/state/privileged/@firstdisplayed}" lastdisplayed="{/state/privileged/@lastdisplayed}" totalitems="{/state/privileged/@totalitems}">
            <first>
               <link>
                  <action handle="goToFirstPage" impl="net.unicon.academus.apps.permissions.engine.ChangePermissionsPageAction" mode="first" inpt="editPermissionForm">
                     <label>First</label>

                     <description>To go to the first page of the results.</description>
                  </action>
               </link>
            </first>

            <prev>
               <link>
                  <action handle="goToPrevPage" impl="net.unicon.academus.apps.permissions.engine.ChangePermissionsPageAction" mode="previous" inpt="editPermissionForm">
                     <label>Prev</label>

                     <description>To go to the previous page of the results.</description>
                  </action>
               </link>
            </prev>

            <next>
               <link>
                  <action handle="goToNextPage" impl="net.unicon.academus.apps.permissions.engine.ChangePermissionsPageAction" mode="next" inpt="editPermissionForm">
                     <label>Next</label>

                     <description>To go to the next page of the results.</description>
                  </action>
               </link>
            </next>

            <last>
               <link>
                  <action handle="goToLastPage" impl="net.unicon.academus.apps.permissions.engine.ChangePermissionsPageAction" mode="last" inpt="editPermissionForm">
                     <label>Last</label>

                     <description>To go to the last page of the results.</description>
                  </action>
               </link>
            </last>
         </paging-controls>
      </paging>

      <call-template handle="permissionsToolbar" select="." />
   </template>

   <template handle="MainBodyEmpty">
      <!--<call-template handle="permissionsToolbar" select="." /> -->

      <call-template handle="listFilters" select="." />

      <h3>There is no matching privileged or selected members or groups for this Portlet.</h3>

      <p>To assign permissions, first 
      <link>
         <action handle="addMembersGroupsLink" impl="net.unicon.academus.apps.permissions.engine.GoToSelectorAction" inpt="editPermissionForm">
            <label>add members or groups</label>

            <description>To add members or groups to the privileged list.</description>
         </action>
      </link>

      that will be given the privileges.</p>

      <call-template handle="permissionsToolbar" select="." />
   </template>

   <template handle="pageToolbar">
      <toolbar>
         <action handle="submitPermissions" impl="net.unicon.academus.apps.permissions.engine.SaveChangesAction" inpt="editPermissionForm" class="form-button-emphasis">
            <label>Save Changes</label>

            <description>To save these changes to permissions.</description>
         </action>

         <action handle="cancelSetPermissions" impl="net.unicon.academus.apps.permissions.engine.WelcomePageAction">
            <label>Cancel</label>

            <description>To cancel these changes to permissions</description>
         </action>
      </toolbar>
   </template>

   <template handle="permissionsToolbar">
      <toolbar class="toolbar-secondary">
         <button-group>
            <action handle="addMorePrivileged" impl="net.unicon.academus.apps.permissions.engine.GoToSelectorAction" inpt="editPermissionForm">
               <label>Add</label>

               <description>To add additional members or groups to this list, for which permissions may be assigned.</description>
            </action>

            <call-template handle="RemoveButton" select="self::node()[count(/state/privileged/member) + count(/state/privileged/group) &gt; 0]">
            </call-template>
         </button-group>
      </toolbar>
   </template>

   <template handle="RemoveButton">
      <action handle="removePrivileged" impl="net.unicon.academus.apps.permissions.engine.RemoveEntriesAction" to-screen="permissions_list" inpt="editPermissionForm">
         <label>Remove</label>

         <description>To remove all privileges for the selected members or groups, and remove them from this list.</description>
      </action>
   </template>

   <template handle="listFilters">
      <hbox width="100%">
         <div>
            <call-template handle="nameFilter" select="." />
         </div>

         <div style="text-align:right;">
            <call-template handle="ViewFilter" select="." />
         </div>
      </hbox>
   </template>

   <template handle="ViewFilter">
      <select-one type="link">
         <choice handle="viewFilter" min-selections="0" max-selections="0">
         <label>Display:</label>

         <option handle="all" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>All</label>

            <description>To view all users and groups regardless of permission settings.</description>
         </option>

         | 
         <option handle="active" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>Active Permissions</label>

            <description>To view only users and groups that have been granted some level of permissions.</description>
         </option>

         | 
         <option handle="inactive" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>Inactive Permissions</label>

            <description>To view only users and groups in the list that have NOT been granted some level of permissions.</description>
         </option>
         </choice>

         <action handle="setView" impl="net.unicon.academus.apps.permissions.engine.ChangeViewFilterAction" to-screen="permissions_list" inpt="editPermissionForm">
            <label>Set</label>

            <description>To set the filter on the displayed items.</description>
         </action>
      </select-one>
   </template>

   <template handle="nameFilter">
      <select-one type="link">
         <choice handle="chooseNameFilter" min-selections="0" max-selections="1">
         <option handle="all" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>All</label>
         </option>

         | 
         <option handle="a" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>A</label>
         </option>

         <option handle="b" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>B</label>
         </option>

         <option handle="c" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>C</label>
         </option>

         <option handle="d" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>D</label>
         </option>

         <option handle="e" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>E</label>
         </option>

         <option handle="f" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>F</label>
         </option>

         <option handle="g" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>G</label>
         </option>

         <option handle="h" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>H</label>
         </option>

         <option handle="i" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>I</label>
         </option>

         <option handle="j" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>J</label>
         </option>

         <option handle="k" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>K</label>
         </option>

         <option handle="l" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>L</label>
         </option>

         <option handle="m" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>M</label>
         </option>

         <option handle="n" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>N</label>
         </option>

         <option handle="o" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>O</label>
         </option>

         <option handle="p" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>P</label>
         </option>

         <option handle="q" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>Q</label>
         </option>

         <option handle="r" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>R</label>
         </option>

         <option handle="s" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>S</label>
         </option>

         <option handle="t" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>T</label>
         </option>

         <option handle="u" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>U</label>
         </option>

         <option handle="v" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>V</label>
         </option>

         <option handle="w" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>W</label>
         </option>

         <option handle="xyz" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>XYZ</label>
         </option>
         </choice>

         <action handle="filterAlphabetically" impl="net.unicon.academus.apps.permissions.engine.ChangeNameFilterAction" inpt="editPermissionForm">
            <label>View Selection</label>

            <description>To view the items as selected.</description>
         </action>
      </select-one>
   </template>

   <template handle="rowSelect">
      <td class="cell-emphasis2">
         <option handle="{@id}" complement-type="net.unicon.penelope.complement.TypeNone">
            <label>
               <value-of select="name" />
            </label>
         </option>
      </td>
   </template>

   <template handle="rowName">
      <td class="permitted-member-group">
         <label for-option="{concat('editPermissionForm_selectedItems_',@id)}">
            <if test="{name(.)}" against="member" condition="equals">
               <true>
                  <span class="member">
                     <value-of select="name" />
                  </span>
               </true>

               <false>
                  <span class="group">
                     <value-of select="name" />
                  </span>
               </false>
            </if>
         </label>
      </td>
   </template>

   <template handle="colPermission">
      <col>
         <th class="portlet-section-header th-column-permission">
            <!--<select-toggle targetname="{concat('PermittedItems_',@handle)}" title="To select or de-select the View Permission for all members and groups on this page">
               <value-of select="label">
               </value-of>
            </select-toggle> -->
            <hint>
            	<label><value-of select="label" ></value-of></label>
            	<description><value-of select="description" ></value-of></description>
            </hint>
         </th>

         <choice handle="{concat('PermittedItems_',@handle)}" min-selections="0" max-selections="0">
            <call-template handle="rowPermission" select="/state/privileged/*[name(.)='member' or name(.)='group']" />
         </choice>
      </col>
   </template>

   <template handle="rowPermission">
      <td>
         <option-display type="dropdown" class-prefix="option-">
	         <option handle="{@id}" complement-type="net.unicon.academus.apps.permissions.TypeGrantDenyDefer">
	            <description>Select whether to grant, deny, or defer this permission to <value-of select="name" />.  Defer means that this permission is deferred to a higher level group.  If no higher level group grants this permission, then it is denied by default.</description>
	            <grant-label>Grant</grant-label>
	            <deny-label>Deny</deny-label>
	            <defer-label>Defer</defer-label>
	         </option>
         </option-display>
      </td>
   </template>

   <template handle="messages">
      <removable>
         <section type="message">
            <h4 class="inline">SUCCESS:</h4>

            <if test="{@type}" against="other" condition="equals">
               <true>
                  <p>
                     <value-of select="message">
                     </value-of>
                  </p>
               </true>
            </if>
         </section>
      </removable>
   </template>

   <template handle="errors">
      <section type="error">
         <if test="{@type}" against="other" condition="equals">
            <true>
               <section type="portlet-msg-error problem">
                  <h4 class="inline">PROBLEM:</h4>

                  <p>
                     <value-of select="problem" />
                  </p>
               </section>

               <section type="portlet-msg-info solution">
                  <h4 class="inline">SOLUTION:</h4>

                  <p>
                     <value-of select="solution" />
                  </p>
               </section>
            </true>
         </if>

<!-- If not any of the above types,  then give generic error message (SHOULD NEVER BE SEEN) -->
         <if test="{boolean(@type!='other')}" against="true" condition="equals">
            <true>
               <section type="portlet-msg-error problem">
                  <h4 class="inline">PROBLEM:</h4>

                  <p>The channel has experienced an unclassified problem.</p>
               </section>

               <section type="portlet-msg-info solution">
                  <h4 class="inline">SOLUTION:</h4>

                  <p>Please notify the Portal Administrator of the problem.</p>
               </section>
            </true>
         </if>
      </section>
   </template>

   <!--<decisions>
      <decision-collection choice-collection="editPermissionForm">
         <decision choice="PermittedItems_Compose">
            <selection option="1">defer</selection>
         </decision>

         <decision choice="PermittedItems_Compose">
            <selection option="2">deny</selection>
         </decision>
         
         <decision choice="PermittedItems_DeleteAny" >
            <selection option="11" >grant</selection>
         </decision>
      </decision-collection>
   </decisions> -->
</screen>

